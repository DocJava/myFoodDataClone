{"version":3,"sources":["assets/logo.svg","util/format_food_item_data.js","recoil/foodItemDataState.js","Sidebar/ServingSizeSelectionRow.js","Sidebar/SidebarFoodCard.js","Sidebar/SidebarFoodList.js","Searchbar/Searchbar.js","Sidebar/Sidebar.js","NutritionFacts/NutritionFactsTable.js","NutritionFacts/NutritionFactsHistogram.js","hooks/useIsMobile.js","recoil/displayDrawerState.js","hooks/useSetFoodItemDataName.js","hooks/useQueryChangedEffects.js","NutritionFacts/NutritionFactsPanel.js","HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","calculateNutritionalFactTable","foodItemData","nutritionFactsByKey","selectedQuantity","selectedWeightIndex","ratio","_","toNumber","key","dailyValue","missingData","base","value","Math","round","percentage","nutritionFactsFromFoodData","calories","totalFat","saturatedFat","transFat","cholesterol","sodium","totalCarbohydrates","fiber","sugar","addedSugar","protein","vitaminC","vitaminD","iron","calcium","potassium","phosphorus","validQuantityWeightIndexFromQueryParams","itemData","servingWeight","quantity","console","log","validQuantity","selector","get","foodItemDataState","name","atom","default","selectedQuantityState","selectedWeightIndexState","quantityWeightIndexState","set","newValue","defaultOrKey","DefaultValue","foodItemDataWithSelectedState","quantityWeightIndex","foodItemDataNutritionFactsState","foodItemDataWithSelected","Option","id","Select","ServingSizeSelectionRow","useRecoilState","setSelectedQuantity","setSelectedWeightIndex","servings","values","JSON","parse","servingsizes","map","weight","description","selectedWeight","className","align","span","min","max","placeholder","onChange","CloseOutlined","style","width","dropdownMatchSelectWidth","serving","index","SidebarFoodCard","resetFoodItemData","useResetRecoilState","closeButton","title","type","icon","onClick","size","extra","SideBarFoodList","useRecoilValue","dataSource","renderItem","item","Item","Searchbar","useState","searchValue","setSearchValue","foodItems","setFoodItems","history","useHistory","searchFoodItems","debounce","foodSearchString","isEmpty","undefined","Axios","then","foodResponseItems","data","trim","split","allowClear","showSearch","showArrow","notFoundContent","filterOption","onSearch","searchedFoodItem","push","foodItem","substringToHighlight","caseInsensitiveGlobalSearch","RegExp","replace","text","substring","foodItemWithHighlights","Sidebar","SidebarFoodList","NutritionFactsTable","foodItemDataNutritionFacts","AddedSugar","justify","NutritionFactsHistogram","WATER","FAT","CHOCDF","PROCNT","ALC","informationPresent","water","Number","fat","carbs","alcohol","containsAlcohol","componentTotal","waterPercentage","toInteger","fatPercentage","carbsPercentage","proteinPercentage","alcoholPercentage","height","isMobileState","window","innerWidth","displayDrawerState","fetchAndAssignFoodItemData","foodItemDataName","a","ndbstring","name3","useQueryChangedEffects","setQuantityWeightIndex","useSetRecoilState","setFoodItemDataName","setFoodItemData","setDisplayDrawer","resetQuantityWeightIndex","useSetFoodItemDataName","useRouteMatch","params","foodName","useEffect","NutritionFactsPanel","displayDrawer","isMobile","MobileHeader","placement","closable","onClose","visible","MobileServingSizeSelector","borderBottom","food_description","datatype","HomePage","class","Header","Layout","Content","Footer","App","setIsMobile","isMobileListener","nextIsMobile","addEventListener","removeEventListener","useIsMobile","displaySider","AppFooter","href","minHeight","src","logo","alt","path","Boolean","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9c88905.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8357fd40.svg\";","import _ from \"lodash\";\n\nconst MIN_QUANTITY = 1;\nconst MAX_QUANTITY = 10000;\n\nexport function calculateNutritionalFactTable(foodItemData) {\n  const nutritionFactsByKey = nutritionFactsFromFoodData(foodItemData);\n\n  return {\n    calories: nutritionFactsByKey(\"ENERC_KCAL\", 2000),\n    totalFat: nutritionFactsByKey(\"FAT\", 65),\n    saturatedFat: nutritionFactsByKey(\"FASAT\", 20),\n    transFat: nutritionFactsByKey(\"FATRN\"),\n    cholesterol: nutritionFactsByKey(\"CHOLE\", 300),\n    sodium: nutritionFactsByKey(\"NA\", 2400),\n    totalCarbohydrates: nutritionFactsByKey(\"CHOCDF\", 300),\n    fiber: nutritionFactsByKey(\"FIBTG\", 25),\n    sugar: nutritionFactsByKey(\"SUGAR\", 50),\n    addedSugar: nutritionFactsByKey(\"ADD_SG\", 50),\n    protein: nutritionFactsByKey(\"PROCNT\", 50),\n    vitaminC: nutritionFactsByKey(\"VITC\", 90),\n    vitaminD: nutritionFactsByKey(\"VITD\", 20),\n    iron: nutritionFactsByKey(\"FE\", 18),\n    calcium: nutritionFactsByKey(\"CA\", 1300),\n    potassium: nutritionFactsByKey(\"K\", 4700),\n    phosphorus: nutritionFactsByKey(\"P\", 1250),\n  };\n}\n\nconst missingData = { value: \"~\", percentage: \"~\" };\n\nfunction nutritionFactsFromFoodData(foodItemData) {\n  const { selectedQuantity, selectedWeightIndex } = foodItemData;\n  const ratio = _.toNumber(foodItemData['GmWt_' +selectedWeightIndex]) / 100;\n\n  return (key, dailyValue = 1) => {\n    if (!foodItemData[key]) return missingData;\n\n    const base = _.toNumber(foodItemData[key]) * ratio * selectedQuantity;\n\n    return {\n      value: Math.round((base * 10) / 10),\n      percentage: Math.round((base / (1.0 * dailyValue)) * 100),\n    };\n  };\n}\n\nfunction validQuantity(quantity) {\n  console.log(\"validating q:\", quantity)\n  if (quantity >= MIN_QUANTITY && quantity <= MAX_QUANTITY) {\n    return quantity;\n  }\n\n  return MIN_QUANTITY;\n}\n\nfunction weightIndexFromServingWeight(foodItemData, servingWeight) {\n  return 1\n  // const weightIndex = _.indexOf(foodItemData.code_arr, servingWeight);\n\n  // if (weightIndex < 0) {\n  //   return 0;\n  // }\n\n  // return weightIndex;\n}\n\nexport function validQuantityWeightIndexFromQueryParams(\n  itemData,\n  servingWeight,\n  quantity\n) {\n  const selectedQuantity = validQuantity(quantity);\n  const selectedWeightIndex = weightIndexFromServingWeight(\n    itemData,\n    servingWeight\n  );\n\n  return { selectedQuantity, selectedWeightIndex };\n}\n","import { atom, selector, DefaultValue } from \"recoil\";\nimport { calculateNutritionalFactTable } from \"../util/format_food_item_data\";\n\nexport const foodItemDataNameState = selector({\n  key: \"foodItemDataNameState\",\n  get: ({ get }) => {\n    const foodItemData = get(foodItemDataState);\n    return foodItemData && foodItemData.name;\n  }\n});\n\nexport const foodItemQueryParamsState = atom({\n  key: \"foodItemQueryParamsState\",\n  default: {},\n});\n\nexport const foodItemDataState = atom({\n  key: \"foodItemDataState\",\n  default: null,\n});\n\nexport const selectedQuantityState = atom({\n  key: \"selectedQuantityState\",\n  default: 1,\n});\n\nexport const selectedWeightIndexState = atom({\n  key: \"selectedWeightIndexState\",\n  default: 1,\n});\n\nexport const quantityWeightIndexState = selector({\n  key: \"quantityWeightIndexState\",\n  get: ({ get }) => {\n    const selectedQuantity = get(selectedQuantityState);\n    const selectedWeightIndex = get(selectedWeightIndexState);\n\n    return {\n      selectedQuantity,\n      selectedWeightIndex,\n    };\n  },\n  set: ({ set }, newValue) => {\n    const defaultOrKey = (key) =>\n      newValue instanceof DefaultValue ? newValue : newValue[key];\n\n    set(selectedQuantityState, defaultOrKey(\"selectedQuantity\"));\n    set(selectedWeightIndexState, defaultOrKey(\"selectedWeightIndex\"));\n  },\n});\n\nconst foodItemDataWithSelectedState = selector({\n  key: \"foodItemDataWithSelectedState\",\n  get: ({ get }) => {\n    const foodItemData = get(foodItemDataState);\n    const quantityWeightIndex = get(quantityWeightIndexState);\n\n    if (!foodItemData) return null;\n\n    return {\n      ...foodItemData,\n      ...quantityWeightIndex,\n    };\n  },\n});\n\nexport const foodItemDataNutritionFactsState = selector({\n  key: \"foodItemDataNutritionFactsState\",\n  get: ({ get }) => {\n    const foodItemDataWithSelected = get(foodItemDataWithSelectedState);\n\n    if (!foodItemDataWithSelected) return null;\n\n    return calculateNutritionalFactTable(foodItemDataWithSelected);\n  },\n});\n\nexport const foodItemDataQueryStringState = selector({\n  key: \"foodItemDataURLState\",\n  get: ({ get }) => {\n    const foodItemData = get(foodItemDataState);\n    const quantityWeightIndex = get(quantityWeightIndexState);\n\n    if (!foodItemData) return \"\";\n\n    const { id } = foodItemData;\n    const { selectedQuantity, selectedWeightIndex } = quantityWeightIndex;\n    const servingCode = 'wt' + selectedWeightIndex;\n\n    const queryString = `?serv=${servingCode}&qty=${selectedQuantity}`;\n\n    return queryString;\n  },\n});\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\n\nimport { InputNumber, Row, Col, Select } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nimport {\n  selectedQuantityState,\n  selectedWeightIndexState,\n} from \"../recoil/foodItemDataState\";\n\nimport _ from \"lodash\";\n\nimport \"./ServingSizeSelectionRow.scss\";\n\nconst { Option } = Select;\n\nconst MIN_QUANTITY = 1;\nconst MAX_QUANTITY = 10000;\n\nfunction ServingSizeSelectionRow({ foodItemData }) {\n  const [selectedQuantity, setSelectedQuantity] = useRecoilState(\n    selectedQuantityState\n  );\n  const [selectedWeightIndex, setSelectedWeightIndex] = useRecoilState(\n    selectedWeightIndexState\n  );\n\n  const servings = _.values(JSON.parse(foodItemData.servingsizes)).map(\n    ([weight, description]) => `${description} (${weight}g)`\n  );\n\n  const selectedWeight = servings[selectedWeightIndex];\n\n  const renderServing = (serving, index) => (\n    <Option value={index} key={serving}>\n      {serving}\n    </Option>\n  );\n\n  const updateSelectedQuantity = (selectedQuantity) => {\n    if (MIN_QUANTITY <= selectedQuantity && selectedQuantity < MAX_QUANTITY) {\n      setSelectedQuantity(selectedQuantity);\n    }\n  };\n\n  return (\n    <Row className=\"serving-size-selection-row__body\" align=\"middle\">\n      <Col span={4}>\n        <InputNumber\n          min={MIN_QUANTITY}\n          max={MAX_QUANTITY}\n          value={selectedQuantity}\n          placeholder={1}\n          onChange={updateSelectedQuantity}\n          className=\"serving-size-selection-row__serving-input\"\n        />\n      </Col>\n\n      <Col span={2}>\n        <CloseOutlined />\n      </Col>\n\n      <Col span={18}>\n        <Select\n          value={selectedWeight}\n          className=\"serving-size-selection-row__select\"\n          style={{ width: \"100%\" }}\n          dropdownMatchSelectWidth={false}\n          onChange={setSelectedWeightIndex}\n        >\n          {servings.map(renderServing)}\n        </Select>\n      </Col>\n    </Row>\n  );\n}\n\nexport default ServingSizeSelectionRow;\n","import React from \"react\";\nimport { useResetRecoilState } from \"recoil\";\n\nimport { Card, Tooltip, Button } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nimport ServingSizeSelectionRow from \"./ServingSizeSelectionRow\";\n\nimport { foodItemDataState } from \"../recoil/foodItemDataState\";\n\nimport \"./SidebarFoodCard.scss\";\n\nfunction SidebarFoodCard({ foodItemData }) {\n  const resetFoodItemData = useResetRecoilState(foodItemDataState);\n\n  const closeButton = (\n    <Tooltip title=\"close\">\n      <Button\n        type=\"link\"\n        icon={<CloseOutlined />}\n        onClick={resetFoodItemData}\n        className=\"sidebar-food-card__close-button\"\n      />\n    </Tooltip>\n  );\n\n  return (\n    <Card\n      title={foodItemData.name}\n      size=\"small\"\n      extra={closeButton}\n      className=\"sidebar-food-card\"\n    >\n      <ServingSizeSelectionRow foodItemData={foodItemData} />\n    </Card>\n  );\n}\n\nexport default SidebarFoodCard;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\"\n\nimport { List } from \"antd\";\nimport SidebarFoodCard from \"./SidebarFoodCard\";\n\nimport { foodItemDataState } from \"../recoil/foodItemDataState\";\n\nfunction SideBarFoodList() {\n  const foodItemData = useRecoilValue(foodItemDataState);\n\n  if (!foodItemData) return null;\n\n  const renderListItem = (item) => (\n    <List.Item key={item.name}>\n      <SidebarFoodCard foodItemData={item} />\n    </List.Item>\n  );\n\n  return (\n    foodItemData && (\n      <List dataSource={[foodItemData]} renderItem={renderListItem} />\n    )\n  );\n}\n\nexport default SideBarFoodList;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Select } from \"antd\";\n\nimport Axios from \"axios\";\nimport _ from \"lodash\";\n\nimport \"./Searchbar.scss\";\n\nconst { Option } = Select;\n\nfunction Searchbar({ placeholder = \"🔍 Find Another Food\" }) {\n  const [searchValue, setSearchValue] = useState();\n  const [foodItems, setFoodItems] = useState([]);\n  const history = useHistory();\n\n  const searchFoodItems = _.debounce((foodSearchString) => {\n    setFoodItems([]);\n\n    if (_.isEmpty(foodSearchString)) {\n      setSearchValue(undefined);\n      return;\n    }\n\n    Axios.get(\n      `https://us-central1-fasttripfinder-199123.cloudfunctions.net/my-food-data-search-proxy/?query=autocomplete/${foodSearchString}`\n    ).then(({ data }) => {\n      const foodResponseItems = data.trim().split(\",\");\n\n      setSearchValue(foodSearchString);\n      setFoodItems(foodResponseItems.map(_.trim));\n    });\n  }, 300);\n\n  function updateSearchedValue(searchedFoodItem) {\n    console.log(\"selected: \", searchedFoodItem);\n\n    if (_.isEmpty(searchedFoodItem)) {\n      setSearchValue(undefined);\n    } else {\n      setSearchValue(searchedFoodItem);\n      history.push(`/nutrition-facts/${searchedFoodItem}`);\n    }\n  }\n\n  const renderHighlightedFoodItem = (foodItem) => {\n    return (\n      <Option key={foodItem}>\n        {foodItemWithHighlights(foodItem, searchValue)}\n      </Option>\n    );\n  };\n\n  return (\n    <Select\n      allowClear\n      showSearch\n      showArrow={false}\n      value={searchValue}\n      placeholder={placeholder}\n      notFoundContent={false}\n      filterOption={false}\n      onSearch={searchFoodItems}\n      onChange={updateSearchedValue}\n      className=\"searchbar\"\n    >\n      {foodItems.map(renderHighlightedFoodItem)}\n    </Select>\n  );\n}\n\nfunction foodItemWithHighlights(foodItem, substringToHighlight) {\n  const caseInsensitiveGlobalSearch = new RegExp(substringToHighlight, \"ig\");\n  const saltedFoodItem = _.replace(\n    foodItem,\n    caseInsensitiveGlobalSearch,\n    (text) => `<=>${text}<=>`\n  );\n\n  const splitText = saltedFoodItem.split(\"<=>\");\n\n  return splitText.map((substring, index) => {\n    const isHighlighting = index % 2 === 1;\n\n    if (isHighlighting) {\n      return (\n        <span key={index} className=\"highlighted\">\n          {substring}\n        </span>\n      );\n    }\n\n    return substring;\n  });\n}\n\nexport default Searchbar;\n","import React from \"react\";\n\nimport { Layout } from \"antd\";\n\nimport SidebarFoodList from \"./SidebarFoodList\";\nimport Searchbar from \"../Searchbar/Searchbar\";\n\nimport \"./Sidebar.scss\";\n\nfunction Sidebar({ className }) {\n  return (\n    <div className={className}>\n      <Layout className=\"sidebar\">\n        <div className=\"sidebar__container\">\n          <Searchbar />\n\n          <SidebarFoodList />\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { Row } from \"antd\";\nimport { foodItemDataNutritionFactsState } from \"../recoil/foodItemDataState\";\n\nimport \"./NutritionFactsTable.scss\";\n\nfunction NutritionFactsTable() {\n  const foodItemDataNutritionFacts = useRecoilValue(\n    foodItemDataNutritionFactsState\n  );\n\n  if (!foodItemDataNutritionFacts) return null;\n  const {\n    calories,\n    totalFat,\n    saturatedFat,\n    transFat,\n    cholesterol,\n    sodium,\n    totalCarbohydrates,\n    fiber,\n    sugar,\n    addedSugar,\n    protein,\n    vitaminC,\n    vitaminD,\n    iron,\n    calcium,\n    potassium,\n    phosphorus,\n  } = foodItemDataNutritionFacts;\n\n  const AddedSugar = () => {\n    if (addedSugar.value === \"~\") {\n      return (\n        <Row className=\"no-sugar-added\">\n          <span>~ No added sugar data collected</span>\n          <b>~</b>\n        </Row>\n      );\n    }\n\n    return (\n      <Row className=\"no-sugar-added\">\n        <span>Includes {addedSugar.value}g Added Sugars</span>\n        <b>{addedSugar.percentage}</b>\n      </Row>\n    );\n  };\n\n  return (\n    <div className=\"nutrition-facts-table\">\n      <div className=\"facts-table-header\">\n        <b>Nutrition Facts</b>\n      </div>\n      <div className=\"facts-table-serving large-border-bottom\">\n        <div>\n          <b>Serving Size</b>\n        </div>\n        <div> 1 cup, quartered or chopped (125g)</div>\n      </div>\n\n      <Row justify=\"space-between\" className=\"calories medium-border-bottom\">\n        <span className=\"label\">Calories</span>\n        <span className=\"value\">{calories.value}</span>\n      </Row>\n\n      <Row justify=\"end\">\n        <b>% Daily Value *</b>\n      </Row>\n\n      <div className=\"chart\">\n        <Row>\n          <span>\n            <b>Total Fat</b> {totalFat.value}g\n          </span>\n          <b>{totalFat.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1\">\n          <span>Saturated Fat {saturatedFat.value}g</span>\n          <b>{saturatedFat.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1 thick-border-bottom\">\n          <span>\n            <em>Trans</em> Fat {transFat.value}g\n          </span>\n        </Row>\n\n        <Row className=\"thick-border-bottom\">\n          <span>\n            <b>Cholesterol</b> {cholesterol.value}mg\n          </span>\n          <b>{cholesterol.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>\n            <b>Sodium</b> {sodium.value}mg\n          </span>\n          <b>{sodium.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>\n            <b>Total Carbohydrate</b> {totalCarbohydrates.value}g\n          </span>\n          <b>{totalCarbohydrates.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1 thick-border-bottom\">\n          <span>Dietary Fiber {fiber.value}g</span>\n          <b>{fiber.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1\">\n          <span>Total Sugars {sugar.value}g</span>\n          <b>{sugar.percentage}%</b>\n        </Row>\n\n        <AddedSugar />\n\n        <Row className=\"large-border-bottom\">\n          <span>\n            <b>Protein</b> {protein.value}g\n          </span>\n          <b>{protein.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>Vitamin C {vitaminC.value}mg</span>\n          {vitaminC.percentage}%\n        </Row>\n\n        <Row>\n          <span>Vitamin D {vitaminD.value}mcg</span>\n          {vitaminD.percentage}%\n        </Row>\n\n        <Row>\n          <span>Iron {iron.value}mg</span>\n          {iron.percentage}%\n        </Row>\n\n        <Row>\n          <span>Calcium {calcium.value}mg</span>\n          {calcium.percentage}%\n        </Row>\n\n        <Row>\n          <span>Potassium {potassium.value}mg</span>\n          {potassium.percentage}%\n        </Row>\n\n        <Row className=\"medium-border-bottom\">\n          <span>Phosphorus {phosphorus.value}mg</span>\n          {phosphorus.percentage}%\n        </Row>\n\n        <Row className=\"facts-table-footer\">\n          *The % Daily Value (DV) tells you how much a nutrient in a serving of\n          food contributes to a daily diet. 2,000 calories a day is used for\n          general nutrition advice.\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default NutritionFactsTable;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { foodItemDataState } from \"../recoil/foodItemDataState\";\nimport { Row, Col } from \"antd\";\n\nimport _ from \"lodash\";\n\nimport \"./NutritionFactsHistogram.scss\";\n\nexport default function NutritionFactsHistogram() {\n  const foodItemData = useRecoilValue(foodItemDataState);\n\n  if (!foodItemData) return null;\n\n  const { WATER, FAT, CHOCDF, PROCNT, ALC } = foodItemData;\n\n  const informationPresent =\n    WATER !== \"~\" && FAT !== \"~\" && CHOCDF !== \"~\" && PROCNT !== \"~\";\n\n  const water = Number(WATER);\n  const fat = Number(FAT);\n  const carbs = Number(CHOCDF);\n  const protein = Number(PROCNT);\n  const alcohol = Number(ALC);\n\n  const containsAlcohol = alcohol > 0;\n\n  const componentTotal = water + fat + carbs + protein + alcohol;\n\n  const waterPercentage = _.toInteger((water / componentTotal) * 100);\n  const fatPercentage = _.toInteger((fat / componentTotal) * 100);\n  const carbsPercentage = _.toInteger((carbs / componentTotal) * 100);\n  const proteinPercentage = _.toInteger((protein / componentTotal) * 100);\n  const alcoholPercentage = _.toInteger((alcohol / componentTotal) * 100);\n\n  return (\n    informationPresent && (\n      <div className=\"histograms\">\n        <div className=\"data-title\">What is this food made of?</div>\n        <div className=\"data-tile\">\n          <Row className=\"square\" align=\"bottom\">\n            <Col className=\"water\" style={{ height: `${waterPercentage}%` }} />\n\n            <Col className=\"fat\" style={{ height: `${fatPercentage}%` }} />\n\n            <Col className=\"carbs\" style={{ height: `${carbsPercentage}%` }} />\n\n            <Col\n              className=\"protein\"\n              style={{ height: `${proteinPercentage}%` }}\n            />\n\n            {containsAlcohol && (\n              <Col\n                className=\"alcohol\"\n                style={{ height: `${alcoholPercentage}%` }}\n              />\n            )}\n          </Row>\n\n          <Row className=\"legend\">\n            <Col>\n              <div>{waterPercentage}%</div>\n              <div>Water</div>\n            </Col>\n\n            <Col>\n              <div>{fatPercentage}%</div>\n              <div>Fat</div>\n            </Col>\n\n            <Col>\n              <div>{carbsPercentage}%</div>\n              <div>Carbs</div>\n            </Col>\n\n            <Col>\n              <div>{proteinPercentage}%</div>\n              <div>Protein</div>\n            </Col>\n\n            {containsAlcohol && (\n              <Col>\n                <div>{alcoholPercentage}%</div>\n                <div>Alcohol</div>\n              </Col>\n            )}\n          </Row>\n        </div>\n      </div>\n    )\n  );\n}\n","import { useEffect } from \"react\";\nimport { atom, useRecoilState } from \"recoil\";\n\nconst MOBILE_BREAKPOINT = 768;\n\nexport const isMobileState = atom({\n  key: \"isMobileState\",\n  default: window.innerWidth < MOBILE_BREAKPOINT,\n});\n\nexport default function useIsMobile() {\n  const [isMobile, setIsMobile] = useRecoilState(isMobileState);\n\n  // run on mount only\n  useEffect(() => {\n    function isMobileListener() {\n      const nextIsMobile = window.innerWidth < MOBILE_BREAKPOINT;\n\n      if (nextIsMobile !== isMobile) {\n        setIsMobile(nextIsMobile);\n      }\n    }\n\n    window.addEventListener(\"resize\", isMobileListener);\n\n    return () => window.removeEventListener(\"resize\", isMobileListener);\n  }, [isMobile, setIsMobile]);\n\n  return isMobile;\n}\n","import { atom } from \"recoil\";\n\nexport const displayDrawerState = atom({\n  key: \"displayDrawerState\",\n  default: false,\n});\n","import { useSetRecoilState, useResetRecoilState } from \"recoil\";\nimport {\n  foodItemDataState,\n  quantityWeightIndexState,\n} from \"../recoil/foodItemDataState\";\nimport { displayDrawerState } from \"../recoil/displayDrawerState\";\nimport Axios from \"axios\";\n\nexport default function useSetFoodItemDataName() {\n  const setFoodItemData = useSetRecoilState(foodItemDataState);\n  const setDisplayDrawer = useSetRecoilState(displayDrawerState);\n  const resetQuantityWeightIndex = useResetRecoilState(\n    quantityWeightIndexState\n  );\n\n  return (name) => {\n    fetchAndAssignFoodItemData(name).then(setFoodItemData);\n\n    setDisplayDrawer(false);\n    resetQuantityWeightIndex();\n  };\n}\n\nconst fetchAndAssignFoodItemData = async (foodItemDataName) => {\n  if (!foodItemDataName) return null;\n\n  const { data } = await Axios.get(\n    `https://us-central1-fasttripfinder-199123.cloudfunctions.net/my-food-data-search-proxy/?query=food/${foodItemDataName}`\n  );\n\n  const foodItemData = data[0];\n\n  return (\n    foodItemData && {\n      ...foodItemData,\n      id: foodItemData.ndbstring,\n      name: foodItemData.name3,\n    }\n  );\n};\n","import { useEffect } from \"react\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nimport { validQuantityWeightIndexFromQueryParams } from \"../util/format_food_item_data\";\n\nimport useSetFoodItemDataName from \"../hooks/useSetFoodItemDataName\";\n\nimport {\n  foodItemDataState,\n  quantityWeightIndexState,\n} from \"../recoil/foodItemDataState\";\n\nexport default function useQueryChangedEffects() {\n  const foodItemData = useRecoilValue(foodItemDataState);\n  const setQuantityWeightIndex = useSetRecoilState(quantityWeightIndexState);\n  const setFoodItemDataName = useSetFoodItemDataName();\n\n  const {\n    params: { foodName, weight, quantity },\n  } = useRouteMatch();\n\n  useEffect(() => {\n    setFoodItemDataName(foodName);\n  }, [foodName]);\n\n  useEffect(() => {\n    if (foodItemData) {\n      setQuantityWeightIndex(\n        validQuantityWeightIndexFromQueryParams(\n          foodItemData,\n          weight,\n          Number(quantity)\n        )\n      );\n    }\n  }, [foodItemData, weight, quantity]);\n}\n","import React from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\n\nimport NutritionFactsTable from \"./NutritionFactsTable\";\nimport { Row, Drawer, Button } from \"antd\";\nimport NutritionFactsHistogram from \"./NutritionFactsHistogram\";\n\nimport { isMobileState } from \"../hooks/useIsMobile\";\nimport { displayDrawerState } from \"../recoil/displayDrawerState\";\nimport { foodItemDataState } from \"../recoil/foodItemDataState\";\nimport useQueryChangedEffects from \"../hooks/useQueryChangedEffects\";\n\nimport \"./NutritionFactsPanel.scss\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport ServingSizeSelectionRow from \"../Sidebar/ServingSizeSelectionRow\";\n\nexport default function NutritionFactsPanel({ className }) {\n  useQueryChangedEffects();\n\n  const foodItemData = useRecoilValue(foodItemDataState);\n  const [displayDrawer, setDisplayDrawer] = useRecoilState(displayDrawerState);\n  const isMobile = useRecoilValue(isMobileState);\n\n  if (!foodItemData) return null;\n\n  const MobileHeader = () =>\n    isMobile && (\n      <>\n        <Button\n          className=\"facts-panel__button\"\n          size=\"large\"\n          onClick={() => setDisplayDrawer(true)}\n        >\n          🔍 Find Another Food\n        </Button>\n        <Drawer\n          title=\"Find Food!\"\n          placement=\"left\"\n          closable={true}\n          onClose={() => setDisplayDrawer(false)}\n          visible={displayDrawer}\n          style={{ width: \"100%\" }}\n        >\n          <Sidebar />\n        </Drawer>\n      </>\n    );\n\n  const MobileServingSizeSelector = () =>\n    isMobile && (\n      <div className=\"facts-panel-body\">\n        <Row\n          className=\"serving-selector\"\n          style={{ borderBottom: \"1px solid #ddd\" }}\n        >\n          Serving Size:\n        </Row>\n\n        <ServingSizeSelectionRow foodItemData={foodItemData} />\n      </div>\n    );\n\n  return (\n    <div className={`${className} facts-panel`}>\n      <MobileHeader />\n\n      <h1 className=\"facts-panel-header\">{foodItemData.name}</h1>\n      <div className=\"facts-panel-subheader\">\n        {foodItemData.food_description}\n      </div>\n\n      <div>\n        <strong>Database: </strong>\n        {foodItemData.datatype}\n      </div>\n\n      <div>\n        <MobileServingSizeSelector />\n        <Row align=\"middle\" className=\"facts-panel-body\">\n          <NutritionFactsTable />\n          <NutritionFactsHistogram />\n        </Row>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Searchbar from \"./Searchbar/Searchbar\";\n\nimport \"./HomePage.scss\";\n\nexport default function HomePage({ className }) {\n  return (\n    <div class={`${className} home-page`}>\n      <h1 class=\"home-header\">Nutrition Facts Search Tool</h1>\n      <div class=\"home-info-how-to-search-line\">\n        Use the search box to find a food and see the nutrient details.\n      </div>\n      <Searchbar placeholder=\"🔍 Search For A Food (Apples)\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport { Route, Switch } from \"react-router\";\n\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport NutritionFactsPanel from \"./NutritionFacts/NutritionFactsPanel\";\nimport HomePage from \"./HomePage\";\n\nimport useIsMobile from \"./hooks/useIsMobile\";\n\nimport useAppEffects from \"./hooks/useAppEffects\";\n\nimport logo from \"./assets/logo.svg\";\n\nimport \"./App.scss\";\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  // useAppEffects();\n\n  const isMobile = useIsMobile();\n  const displaySider = !isMobile;\n\n  const AppFooter = () => (\n    <>\n      <div className=\"app-footer-links\">\n        <a href=\"https://www.myfooddata.com/\">Home |</a>\n        <a href=\"https://www.myfooddata.com/contact.php\"> Contact |</a>\n        <a href=\"https://www.myfooddata.com/about.php\"> About |</a>\n        <a href=\"https://www.myfooddata.com/terms.php\"> Terms of Use |</a>\n        <a href=\"https://www.myfooddata.com/privacy.php\"> Privacy |</a>\n        <a href=\"https://www.myfooddata.com/faq.php\"> FAQ |</a>\n        <a href=\"https://www.myfooddata.com/sitemap.php\"> Sitemap</a>\n      </div>\n      <div className=\"app-footer-copyright\">© 2020 MyFoodData.com</div>\n    </>\n  );\n\n  return (\n    <Layout className={isMobile && \"mobile\"} style={{ minHeight: \"100vh\" }}>\n      <Header className=\"header\">\n        <a href=\"https://www.myfooddata.com\">\n          <img\n            className=\"header-logo\"\n            src={logo}\n            alt=\"my food data\"\n            height=\"100%\"\n          />\n        </a>\n      </Header>\n\n      <Content>\n        <Switch>\n          <Route path=\"/nutrition-facts/:foodName/:weight?/:quantity?\">\n            {displaySider && (\n              <Sidebar className=\"ant-layout-content__sidebar\" />\n            )}\n\n            <NutritionFactsPanel className=\"ant-layout-content__nutrition-facts-panel\" />\n          </Route>\n\n          {/* default route */}\n          <Route>\n            <HomePage className=\"ant-layout-content__home-page\" />\n          </Route>\n        </Switch>\n      </Content>\n\n      <Footer className=\"app-footer\">\n        <AppFooter />\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"myFoodDataClone\">\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
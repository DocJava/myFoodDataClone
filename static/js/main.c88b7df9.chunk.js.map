{"version":3,"sources":["assets/logo.svg","util/format_food_item_data.js","recoil/foodItemDataState.js","Sidebar/ServingSizeSelectionRow.js","Sidebar/SidebarFoodCard.js","Sidebar/SidebarFoodList.js","Searchbar/Searchbar.js","Sidebar/Sidebar.js","NutritionFacts/NutritionFactsTable.js","NutritionFacts/NutritionFactsHistogram.js","hooks/useIsMobile.js","recoil/displayDrawerState.js","hooks/useSetFoodItemDataName.js","hooks/useQueryChangedEffects.js","NutritionFacts/NutritionFactsPanel.js","HomePage.js","hooks/useUrlEffects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MIN_QUANTITY","MAX_QUANTITY","calculateNutritionalFactTable","foodItemData","nutritionFactsByKey","selectedQuantity","selectedWeight","ratio","_","toNumber","servings","weight","key","dailyValue","missingData","base","value","Math","round","percentage","nutritionFactsFromFoodData","description","calories","totalFat","saturatedFat","transFat","cholesterol","sodium","totalCarbohydrates","fiber","sugar","addedSugar","protein","vitaminC","vitaminD","iron","calcium","potassium","phosphorus","servingDescription","validQuantity","quantity","validServingWeight","servingWeight","has","selector","get","foodItemDataState","name","atom","default","selectedQuantityState","selectedWeightState","quantityWeightState","itemData","set","newValue","defaultOrKey","DefaultValue","foodItemDataWithSelectedState","quantityWeight","foodItemDataNutritionFactsState","foodItemDataWithSelected","foodItemDataQueryStringState","queryString","Option","Select","ServingSizeSelectionRow","useRecoilState","setSelectedQuantity","setSelectedWeight","entries","className","align","span","min","max","placeholder","onChange","CloseOutlined","style","width","dropdownMatchSelectWidth","map","servingKey","SidebarFoodCard","resetFoodItemData","useResetRecoilState","closeButton","title","type","icon","onClick","size","extra","SideBarFoodList","useRecoilValue","dataSource","renderItem","item","Item","Searchbar","useState","searchValue","setSearchValue","foodItems","setFoodItems","history","useHistory","searchFoodItems","debounce","foodSearchString","isEmpty","Axios","then","foodResponseItems","data","trim","split","allowClear","showSearch","showArrow","notFoundContent","filterOption","onSearch","searchedFoodItem","console","log","push","foodItem","substringToHighlight","caseInsensitiveGlobalSearch","RegExp","replace","text","substring","index","foodItemWithHighlights","Sidebar","SidebarFoodList","NutritionFactsTable","foodItemDataNutritionFacts","justify","NutritionFactsHistogram","WATER","FAT","CHOCDF","PROCNT","ALC","informationPresent","water","Number","fat","carbs","alcohol","containsAlcohol","componentTotal","waterPercentage","toInteger","fatPercentage","carbsPercentage","proteinPercentage","alcoholPercentage","height","MOBILE_BREAKPOINT","isMobileState","window","innerWidth","displayDrawerState","fetchAndAssignFoodItemData","foodItemDataName","a","servingSizes","JSON","parse","servingsizes","mapValues","id","ndbstring","name3","useQueryChangedEffects","setQuantityWeight","useSetRecoilState","setFoodItemDataName","setFoodItemData","setDisplayDrawer","resetQuantityWeight","useSetFoodItemDataName","useRouteMatch","params","foodName","useEffect","NutritionFactsPanel","displayDrawer","isMobile","placement","closable","onClose","visible","food_description","data_db_name","borderBottom","HomePage","class","getDefaultQuantityWeight","first","keys","Header","Layout","Content","Footer","App","foodItemDataQueryString","pathname","useUrlEffects","setIsMobile","isMobileListener","nextIsMobile","addEventListener","removeEventListener","useIsMobile","displaySidebar","minHeight","href","src","logo","alt","path","Boolean","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c88b7df9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8357fd40.svg\";","import _ from \"lodash\";\n\nconst MIN_QUANTITY = 1;\nconst MAX_QUANTITY = 10000;\n\nexport function calculateNutritionalFactTable(foodItemData) {\n  const nutritionFactsByKey = nutritionFactsFromFoodData(foodItemData);\n  const { servings, selectedWeight } = foodItemData;\n  const { description } = servings[selectedWeight];\n\n  return {\n    calories: nutritionFactsByKey(\"ENERC_KCAL\", 2000),\n    totalFat: nutritionFactsByKey(\"FAT\", 65),\n    saturatedFat: nutritionFactsByKey(\"FASAT\", 20),\n    transFat: nutritionFactsByKey(\"FATRN\"),\n    cholesterol: nutritionFactsByKey(\"CHOLE\", 300),\n    sodium: nutritionFactsByKey(\"NA\", 2400),\n    totalCarbohydrates: nutritionFactsByKey(\"CHOCDF\", 300),\n    fiber: nutritionFactsByKey(\"FIBTG\", 25),\n    sugar: nutritionFactsByKey(\"SUGAR\", 50),\n    addedSugar: nutritionFactsByKey(\"ADD_SG\", 50),\n    protein: nutritionFactsByKey(\"PROCNT\", 50),\n    vitaminC: nutritionFactsByKey(\"VITC\", 90),\n    vitaminD: nutritionFactsByKey(\"VITD\", 20),\n    iron: nutritionFactsByKey(\"FE\", 18),\n    calcium: nutritionFactsByKey(\"CA\", 1300),\n    potassium: nutritionFactsByKey(\"K\", 4700),\n    phosphorus: nutritionFactsByKey(\"P\", 1250),\n    servingDescription: description,\n  };\n}\n\nconst missingData = { value: \"~\", percentage: \"~\" };\n\nfunction nutritionFactsFromFoodData(foodItemData) {\n  const { selectedQuantity, selectedWeight } = foodItemData;\n  const ratio = _.toNumber(foodItemData.servings[selectedWeight].weight) / 100;\n\n  return (key, dailyValue = 1) => {\n    if (!foodItemData[key]) return missingData;\n\n    const base = _.toNumber(foodItemData[key]) * ratio * selectedQuantity;\n\n    return {\n      value: Math.round((base * 10) / 10),\n      percentage: Math.round((base / (1.0 * dailyValue)) * 100),\n    };\n  };\n}\n\nfunction validQuantity(quantity) {\n  if (quantity >= MIN_QUANTITY && quantity <= MAX_QUANTITY) {\n    return quantity;\n  }\n\n  return MIN_QUANTITY;\n}\n\nfunction validServingWeight(foodItemData, servingWeight) {\n  return _.has(foodItemData.servings, servingWeight) ? servingWeight : \"wt1\";\n}\n\nexport function validQuantityWeightFromQueryParams(\n  itemData,\n  servingWeight,\n  quantity\n) {\n  return {\n    selectedQuantity: validQuantity(quantity),\n    selectedWeight: validServingWeight(itemData, servingWeight),\n  };\n}\n","import { atom, selector, DefaultValue } from \"recoil\";\nimport {\n  calculateNutritionalFactTable,\n  validQuantityWeightFromQueryParams,\n} from \"../util/format_food_item_data\";\n\nexport const foodItemDataNameState = selector({\n  key: \"foodItemDataNameState\",\n  get: ({ get }) => {\n    const foodItemData = get(foodItemDataState);\n    return foodItemData && foodItemData.name;\n  },\n});\n\nexport const foodItemQueryParamsState = atom({\n  key: \"foodItemQueryParamsState\",\n  default: {},\n});\n\nexport const foodItemDataState = atom({\n  key: \"foodItemDataState\",\n  default: null,\n});\n\nexport const selectedQuantityState = atom({\n  key: \"selectedQuantityState\",\n  default: 1,\n});\n\nexport const selectedWeightState = atom({\n  key: \"selectedWeightState\",\n  default: \"wt1\",\n});\n\nexport const quantityWeightState = selector({\n  key: \"quantityWeightState\",\n  get: ({ get }) => {\n    const foodItemData = get(foodItemDataState);\n    const selectedQuantity = get(selectedQuantityState);\n    const selectedWeight = get(selectedWeightState);\n\n    if (!foodItemData) {\n      return {\n        selectedQuantity: 1,\n        selectedWeight: 'wt1',\n      };\n    }\n\n    return validQuantityWeightFromQueryParams(\n      foodItemData,\n      selectedWeight,\n      selectedQuantity\n    );\n  },\n  set: ({ set }, newValue) => {\n    const defaultOrKey = (key) =>\n      newValue instanceof DefaultValue ? newValue : newValue[key];\n    const selectedQuantity = defaultOrKey(\"selectedQuantity\");\n    const selectedWeight = defaultOrKey(\"selectedWeight\");\n\n    set(selectedQuantityState, defaultOrKey(\"selectedQuantity\"));\n    set(selectedWeightState, defaultOrKey(\"selectedWeight\"));\n  },\n});\n\nconst foodItemDataWithSelectedState = selector({\n  key: \"foodItemDataWithSelectedState\",\n  get: ({ get }) => {\n    const foodItemData = get(foodItemDataState);\n    const quantityWeight = get(quantityWeightState);\n\n    if (!foodItemData) return null;\n\n    return {\n      ...foodItemData,\n      ...quantityWeight,\n    };\n  },\n});\n\nexport const foodItemDataNutritionFactsState = selector({\n  key: \"foodItemDataNutritionFactsState\",\n  get: ({ get }) => {\n    const foodItemDataWithSelected = get(foodItemDataWithSelectedState);\n\n    if (!foodItemDataWithSelected) return null;\n\n    return calculateNutritionalFactTable(foodItemDataWithSelected);\n  },\n});\n\nexport const foodItemDataQueryStringState = selector({\n  key: \"foodItemDataURLState\",\n  get: ({ get }) => {\n    const foodItemData = get(foodItemDataState);\n    const quantityWeight = get(quantityWeightState);\n\n    if (!foodItemData) return \"\";\n\n    const { selectedQuantity, selectedWeight } = quantityWeight;\n\n    let queryString = `/nutrition-facts/${foodItemData.name}`;\n\n    if (selectedQuantity && selectedWeight) {\n      queryString += `/${selectedWeight}/${selectedQuantity}`;\n    }\n\n    return queryString;\n  },\n});\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\n\nimport { InputNumber, Row, Col, Select } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nimport {\n  selectedQuantityState,\n  selectedWeightState,\n} from \"../recoil/foodItemDataState\";\n\nimport _ from \"lodash\";\n\nimport \"./ServingSizeSelectionRow.scss\";\n\nconst { Option } = Select;\n\nconst MIN_QUANTITY = 1;\nconst MAX_QUANTITY = 10000;\n\nfunction ServingSizeSelectionRow({ foodItemData }) {\n  const [selectedQuantity, setSelectedQuantity] = useRecoilState(\n    selectedQuantityState\n  );\n  const [selectedWeight, setSelectedWeight] = useRecoilState(\n    selectedWeightState\n  );\n\n  const servings = _.entries(foodItemData.servings);\n\n  const renderServing = ([servingKey, { description }]) => (\n    <Option value={servingKey} key={servingKey}>\n      {description}\n    </Option>\n  );\n\n  const updateSelectedQuantity = (selectedQuantity) => {\n    if (MIN_QUANTITY <= selectedQuantity && selectedQuantity < MAX_QUANTITY) {\n      setSelectedQuantity(selectedQuantity);\n    }\n  };\n\n  return (\n    <Row className=\"serving-size-selection-row__body\" align=\"middle\">\n      <Col span={4}>\n        <InputNumber\n          min={MIN_QUANTITY}\n          max={MAX_QUANTITY}\n          value={selectedQuantity}\n          placeholder={1}\n          onChange={updateSelectedQuantity}\n          className=\"serving-size-selection-row__serving-input\"\n        />\n      </Col>\n\n      <Col span={2}>\n        <CloseOutlined />\n      </Col>\n\n      <Col span={18}>\n        <Select\n          value={selectedWeight}\n          className=\"serving-size-selection-row__select\"\n          style={{ width: \"100%\" }}\n          dropdownMatchSelectWidth={false}\n          onChange={setSelectedWeight}\n        >\n          {servings.map(renderServing)}\n        </Select>\n      </Col>\n    </Row>\n  );\n}\n\nexport default ServingSizeSelectionRow;\n","import React from \"react\";\nimport { useResetRecoilState } from \"recoil\";\n\nimport { Card, Tooltip, Button } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nimport ServingSizeSelectionRow from \"./ServingSizeSelectionRow\";\n\nimport { foodItemDataState } from \"../recoil/foodItemDataState\";\n\nimport \"./SidebarFoodCard.scss\";\n\nfunction SidebarFoodCard({ foodItemData }) {\n  const resetFoodItemData = useResetRecoilState(foodItemDataState);\n\n  const closeButton = (\n    <Tooltip title=\"close\">\n      <Button\n        type=\"link\"\n        icon={<CloseOutlined />}\n        onClick={resetFoodItemData}\n        className=\"sidebar-food-card__close-button\"\n      />\n    </Tooltip>\n  );\n\n  return (\n    <Card\n      title={foodItemData.name}\n      size=\"small\"\n      extra={closeButton}\n      className=\"sidebar-food-card\"\n    >\n      <ServingSizeSelectionRow foodItemData={foodItemData} />\n    </Card>\n  );\n}\n\nexport default SidebarFoodCard;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\"\n\nimport { List } from \"antd\";\nimport SidebarFoodCard from \"./SidebarFoodCard\";\n\nimport { foodItemDataState } from \"../recoil/foodItemDataState\";\n\nfunction SideBarFoodList() {\n  const foodItemData = useRecoilValue(foodItemDataState);\n\n  if (!foodItemData) return null;\n\n  const renderListItem = (item) => (\n    <List.Item key={item.name}>\n      <SidebarFoodCard foodItemData={item} />\n    </List.Item>\n  );\n\n  return (\n    foodItemData && (\n      <List dataSource={[foodItemData]} renderItem={renderListItem} />\n    )\n  );\n}\n\nexport default SideBarFoodList;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Select } from \"antd\";\n\nimport Axios from \"axios\";\nimport _ from \"lodash\";\n\nimport \"./Searchbar.scss\";\n\nconst { Option } = Select;\n\nfunction Searchbar({ placeholder = \"🔍 Find Another Food\" }) {\n  const [searchValue, setSearchValue] = useState();\n  const [foodItems, setFoodItems] = useState([]);\n  const history = useHistory();\n\n  const searchFoodItems = _.debounce((foodSearchString) => {\n    setFoodItems([]);\n\n    if (_.isEmpty(foodSearchString)) {\n      setSearchValue(null);\n      return;\n    }\n\n    Axios.get(\n      `https://us-central1-fasttripfinder-199123.cloudfunctions.net/my-food-data-search-proxy/?query=autocomplete/${foodSearchString}`\n    ).then(({ data }) => {\n      const foodResponseItems = data.trim().split(\",\");\n\n      setSearchValue(foodSearchString);\n      setFoodItems(foodResponseItems.map(_.trim));\n    });\n  }, 300);\n\n  function updateSearchedValue(searchedFoodItem) {\n    console.log(\"selected: \", searchedFoodItem);\n\n    setSearchValue(null);\n    history.push(`/nutrition-facts/${searchedFoodItem}`);\n  }\n\n  const renderHighlightedFoodItem = (foodItem) => {\n    return (\n      <Option key={foodItem}>\n        {foodItemWithHighlights(foodItem, searchValue)}\n      </Option>\n    );\n  };\n\n  return (\n    <div className=\"select-container\">\n      <Select\n        allowClear\n        showSearch\n        showArrow={false}\n        value={searchValue}\n        placeholder={placeholder}\n        notFoundContent={false}\n        filterOption={false}\n        onSearch={searchFoodItems}\n        onChange={updateSearchedValue}\n        className=\"searchbar\"\n      >\n        {foodItems.map(renderHighlightedFoodItem)}\n      </Select>\n    </div>\n  );\n}\n\nfunction foodItemWithHighlights(foodItem, substringToHighlight) {\n  const caseInsensitiveGlobalSearch = new RegExp(substringToHighlight, \"ig\");\n  const saltedFoodItem = _.replace(\n    foodItem,\n    caseInsensitiveGlobalSearch,\n    (text) => `<=>${text}<=>`\n  );\n\n  const splitText = saltedFoodItem.split(\"<=>\");\n\n  return splitText.map((substring, index) => {\n    const isHighlighting = index % 2 === 1;\n\n    if (isHighlighting) {\n      return (\n        <span key={index} className=\"highlighted\">\n          {substring}\n        </span>\n      );\n    }\n\n    return substring;\n  });\n}\n\nexport default Searchbar;\n","import React from \"react\";\n\nimport { Layout } from \"antd\";\n\nimport SidebarFoodList from \"./SidebarFoodList\";\nimport Searchbar from \"../Searchbar/Searchbar\";\n\nimport \"./Sidebar.scss\";\n\nfunction Sidebar({ className }) {\n  return (\n    <div className={className}>\n      <Layout className=\"sidebar\">\n        <div className=\"sidebar__container\">\n          <Searchbar />\n\n          <SidebarFoodList />\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { Row } from \"antd\";\nimport { foodItemDataNutritionFactsState } from \"../recoil/foodItemDataState\";\n\nimport \"./NutritionFactsTable.scss\";\n\nfunction NutritionFactsTable() {\n  const foodItemDataNutritionFacts = useRecoilValue(\n    foodItemDataNutritionFactsState\n  );\n\n  if (!foodItemDataNutritionFacts) return null;\n  const {\n    calories,\n    totalFat,\n    saturatedFat,\n    transFat,\n    cholesterol,\n    sodium,\n    totalCarbohydrates,\n    fiber,\n    sugar,\n    addedSugar,\n    protein,\n    vitaminC,\n    vitaminD,\n    iron,\n    calcium,\n    potassium,\n    phosphorus,\n    servingDescription\n  } = foodItemDataNutritionFacts;\n\n  const AddedSugar = () => {\n    if (addedSugar.value === \"~\") {\n      return (\n        <Row className=\"no-sugar-added\">\n          <span>~ No added sugar data collected</span>\n          <b>~</b>\n        </Row>\n      );\n    }\n\n    return (\n      <Row className=\"no-sugar-added\">\n        <span>Includes {addedSugar.value}g Added Sugars</span>\n        <b>{addedSugar.percentage}</b>\n      </Row>\n    );\n  };\n\n  return (\n    <div className=\"nutrition-facts-table\">\n      <div className=\"facts-table-header\">\n        <b>Nutrition Facts</b>\n      </div>\n      <div className=\"facts-table-serving large-border-bottom\">\n        <div>\n          <b>Serving Size</b>\n        </div>\n        <div>{servingDescription}</div>\n      </div>\n\n      <Row justify=\"space-between\" className=\"calories medium-border-bottom\">\n        <span className=\"label\">Calories</span>\n        <span className=\"value\">{calories.value}</span>\n      </Row>\n\n      <Row justify=\"end\">\n        <b>% Daily Value *</b>\n      </Row>\n\n      <div className=\"chart\">\n        <Row>\n          <span>\n            <b>Total Fat</b> {totalFat.value}g\n          </span>\n          <b>{totalFat.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1\">\n          <span>Saturated Fat {saturatedFat.value}g</span>\n          <b>{saturatedFat.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1 thick-border-bottom\">\n          <span>\n            <em>Trans</em> Fat {transFat.value}g\n          </span>\n        </Row>\n\n        <Row className=\"thick-border-bottom\">\n          <span>\n            <b>Cholesterol</b> {cholesterol.value}mg\n          </span>\n          <b>{cholesterol.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>\n            <b>Sodium</b> {sodium.value}mg\n          </span>\n          <b>{sodium.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>\n            <b>Total Carbohydrate</b> {totalCarbohydrates.value}g\n          </span>\n          <b>{totalCarbohydrates.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1 thick-border-bottom\">\n          <span>Dietary Fiber {fiber.value}g</span>\n          <b>{fiber.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1\">\n          <span>Total Sugars {sugar.value}g</span>\n          <b>{sugar.percentage}%</b>\n        </Row>\n\n        <AddedSugar />\n\n        <Row className=\"large-border-bottom\">\n          <span>\n            <b>Protein</b> {protein.value}g\n          </span>\n          <b>{protein.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>Vitamin C {vitaminC.value}mg</span>\n          {vitaminC.percentage}%\n        </Row>\n\n        <Row>\n          <span>Vitamin D {vitaminD.value}mcg</span>\n          {vitaminD.percentage}%\n        </Row>\n\n        <Row>\n          <span>Iron {iron.value}mg</span>\n          {iron.percentage}%\n        </Row>\n\n        <Row>\n          <span>Calcium {calcium.value}mg</span>\n          {calcium.percentage}%\n        </Row>\n\n        <Row>\n          <span>Potassium {potassium.value}mg</span>\n          {potassium.percentage}%\n        </Row>\n\n        <Row className=\"medium-border-bottom\">\n          <span>Phosphorus {phosphorus.value}mg</span>\n          {phosphorus.percentage}%\n        </Row>\n\n        <Row className=\"facts-table-footer\">\n          *The % Daily Value (DV) tells you how much a nutrient in a serving of\n          food contributes to a daily diet. 2,000 calories a day is used for\n          general nutrition advice.\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default NutritionFactsTable;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { foodItemDataState } from \"../recoil/foodItemDataState\";\nimport { Row, Col } from \"antd\";\n\nimport _ from \"lodash\";\n\nimport \"./NutritionFactsHistogram.scss\";\n\nexport default function NutritionFactsHistogram() {\n  const foodItemData = useRecoilValue(foodItemDataState);\n\n  if (!foodItemData) return null;\n\n  const { WATER, FAT, CHOCDF, PROCNT, ALC } = foodItemData;\n\n  const informationPresent =\n    WATER !== \"~\" && FAT !== \"~\" && CHOCDF !== \"~\" && PROCNT !== \"~\";\n\n  const water = Number(WATER);\n  const fat = Number(FAT);\n  const carbs = Number(CHOCDF);\n  const protein = Number(PROCNT);\n  const alcohol = Number(ALC);\n\n  const containsAlcohol = alcohol > 0;\n\n  const componentTotal = water + fat + carbs + protein + alcohol;\n\n  const waterPercentage = _.toInteger((water / componentTotal) * 100);\n  const fatPercentage = _.toInteger((fat / componentTotal) * 100);\n  const carbsPercentage = _.toInteger((carbs / componentTotal) * 100);\n  const proteinPercentage = _.toInteger((protein / componentTotal) * 100);\n  const alcoholPercentage = _.toInteger((alcohol / componentTotal) * 100);\n\n  return (\n    informationPresent && (\n      <div className=\"histograms\">\n        <div className=\"data-title\">What is this food made of?</div>\n        <div className=\"data-tile\">\n          <Row className=\"square\" align=\"bottom\">\n            <Col className=\"water\" style={{ height: `${waterPercentage}%` }} />\n\n            <Col className=\"fat\" style={{ height: `${fatPercentage}%` }} />\n\n            <Col className=\"carbs\" style={{ height: `${carbsPercentage}%` }} />\n\n            <Col\n              className=\"protein\"\n              style={{ height: `${proteinPercentage}%` }}\n            />\n\n            {containsAlcohol && (\n              <Col\n                className=\"alcohol\"\n                style={{ height: `${alcoholPercentage}%` }}\n              />\n            )}\n          </Row>\n\n          <Row className=\"legend\">\n            <Col>\n              <div>{waterPercentage}%</div>\n              <div>Water</div>\n            </Col>\n\n            <Col>\n              <div>{fatPercentage}%</div>\n              <div>Fat</div>\n            </Col>\n\n            <Col>\n              <div>{carbsPercentage}%</div>\n              <div>Carbs</div>\n            </Col>\n\n            <Col>\n              <div>{proteinPercentage}%</div>\n              <div>Protein</div>\n            </Col>\n\n            {containsAlcohol && (\n              <Col>\n                <div>{alcoholPercentage}%</div>\n                <div>Alcohol</div>\n              </Col>\n            )}\n          </Row>\n        </div>\n      </div>\n    )\n  );\n}\n","import { useEffect } from \"react\";\nimport { atom, useRecoilState } from \"recoil\";\n\nconst MOBILE_BREAKPOINT = 768;\n\nexport const isMobileState = atom({\n  key: \"isMobileState\",\n  default: window.innerWidth < MOBILE_BREAKPOINT,\n});\n\nexport default function useIsMobile() {\n  const [isMobile, setIsMobile] = useRecoilState(isMobileState);\n\n  // run on mount only\n  useEffect(() => {\n    function isMobileListener() {\n      const nextIsMobile = window.innerWidth < MOBILE_BREAKPOINT;\n\n      if (nextIsMobile !== isMobile) {\n        setIsMobile(nextIsMobile);\n      }\n    }\n\n    window.addEventListener(\"resize\", isMobileListener);\n\n    return () => window.removeEventListener(\"resize\", isMobileListener);\n  }, [isMobile, setIsMobile]);\n\n  return isMobile;\n}\n","import { atom } from \"recoil\";\n\nexport const displayDrawerState = atom({\n  key: \"displayDrawerState\",\n  default: false,\n});\n","import { useSetRecoilState, useResetRecoilState } from \"recoil\";\nimport {\n  foodItemDataState,\n  quantityWeightState,\n} from \"../recoil/foodItemDataState\";\nimport { displayDrawerState } from \"../recoil/displayDrawerState\";\nimport Axios from \"axios\";\nimport _ from \"lodash\";\n\nexport default function useSetFoodItemDataName() {\n  const setFoodItemData = useSetRecoilState(foodItemDataState);\n  const setDisplayDrawer = useSetRecoilState(displayDrawerState);\n  const resetQuantityWeight = useResetRecoilState(\n    quantityWeightState\n  );\n\n  return (name) => {\n    fetchAndAssignFoodItemData(name).then(setFoodItemData);\n\n    setDisplayDrawer(false);\n    resetQuantityWeight();\n  };\n}\n\nconst fetchAndAssignFoodItemData = async (foodItemDataName) => {\n  if (!foodItemDataName) return null;\n\n  const { data } = await Axios.get(\n    `https://us-central1-fasttripfinder-199123.cloudfunctions.net/my-food-data-search-proxy/?query=food/${foodItemDataName}`\n  );\n\n  const foodItemData = data[0];\n\n  if (!foodItemData) return null;\n\n  const servingSizes = JSON.parse(foodItemData.servingsizes);\n\n  const servings = _.mapValues(servingSizes, ([weight, description]) => ({\n    weight,\n    description: `${description} (${weight}g)`,\n  }));\n\n  return {\n    ...foodItemData,\n    id: foodItemData.ndbstring,\n    name: foodItemData.name3,\n    servings,\n  };\n};\n","import { useEffect } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nimport useSetFoodItemDataName from \"../hooks/useSetFoodItemDataName\";\n\nimport { quantityWeightState } from \"../recoil/foodItemDataState\";\n\nexport default function useQueryChangedEffects() {\n  const setQuantityWeight = useSetRecoilState(quantityWeightState);\n  const setFoodItemDataName = useSetFoodItemDataName();\n\n  const {\n    params: { foodName, weight, quantity },\n  } = useRouteMatch();\n\n  useEffect(() => {\n    setFoodItemDataName(foodName);\n  }, [foodName]);\n\n  useEffect(() => {\n    setQuantityWeight({\n      selectedQuantity: Number(quantity),\n      selectedWeight: weight,\n    });\n  }, []);\n}\n","import React from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\n\nimport NutritionFactsTable from \"./NutritionFactsTable\";\nimport { Row, Drawer, Button } from \"antd\";\nimport NutritionFactsHistogram from \"./NutritionFactsHistogram\";\n\nimport { isMobileState } from \"../hooks/useIsMobile\";\nimport { displayDrawerState } from \"../recoil/displayDrawerState\";\nimport { foodItemDataState } from \"../recoil/foodItemDataState\";\nimport useQueryChangedEffects from \"../hooks/useQueryChangedEffects\";\n\nimport \"./NutritionFactsPanel.scss\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport ServingSizeSelectionRow from \"../Sidebar/ServingSizeSelectionRow\";\n\nexport default function NutritionFactsPanel({ className }) {\n  useQueryChangedEffects();\n\n  const foodItemData = useRecoilValue(foodItemDataState);\n  const [displayDrawer, setDisplayDrawer] = useRecoilState(displayDrawerState);\n  const isMobile = useRecoilValue(isMobileState);\n\n  if (!foodItemData) return null;\n\n  const MobileHeader = () =>\n    isMobile && (\n      <>\n        <Button\n          className=\"facts-panel__button\"\n          size=\"large\"\n          onClick={() => setDisplayDrawer(true)}\n        >\n          🔍 Find Another Food\n        </Button>\n        <Drawer\n          title=\"Find Food!\"\n          placement=\"left\"\n          closable={true}\n          onClose={() => setDisplayDrawer(false)}\n          visible={displayDrawer}\n          style={{ width: \"100%\" }}\n        >\n          <Sidebar />\n        </Drawer>\n      </>\n    );\n\n  const MobileServingSizeSelector = () =>\n    isMobile && (\n      <div className=\"facts-panel-body\">\n        <Row\n          className=\"serving-selector\"\n          style={{ borderBottom: \"1px solid #ddd\" }}\n        >\n          Serving Size:\n        </Row>\n\n        <ServingSizeSelectionRow foodItemData={foodItemData} />\n      </div>\n    );\n\n  return (\n    <div className={`${className} facts-panel`}>\n      <MobileHeader />\n\n      <h1 className=\"facts-panel-header\">{foodItemData.name}</h1>\n      <div className=\"facts-panel-subheader\">\n        {foodItemData.food_description}\n      </div>\n\n      <div>\n        <strong>Database: </strong>\n        {foodItemData.data_db_name}\n      </div>\n\n      <div>\n        <MobileServingSizeSelector />\n        <Row align=\"middle\" className=\"facts-panel-body\">\n          <NutritionFactsTable />\n          <NutritionFactsHistogram />\n        </Row>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Searchbar from \"./Searchbar/Searchbar\";\n\nimport \"./HomePage.scss\";\n\nexport default function HomePage({ className }) {\n  return (\n    <div class={`${className} home-page`}>\n      <h1 class=\"home-header\">Nutrition Facts Search Tool</h1>\n      <div class=\"home-info-how-to-search-line\">\n        Use the search box to find a food and see the nutrient details.\n      </div>\n      <div className=\"searchbar-container\">\n        <Searchbar placeholder=\"🔍 Search For A Food (Apples)\" />\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  foodItemDataState,\n  quantityWeightState,\n  foodItemDataQueryStringState,\n} from \"../recoil/foodItemDataState\";\nimport _ from \"lodash\";\n\nexport default function useUrlEffects() {\n  const history = useHistory();\n  const foodItemDataQueryString = useRecoilValue(foodItemDataQueryStringState);\n  const foodItemData = useRecoilValue(foodItemDataState);\n  const [quantityWeight, setQuantityWeight] = useRecoilState(\n    quantityWeightState\n  );\n\n  // run when foodItemData changes\n  useEffect(() => {\n    if (foodItemData) {\n      setQuantityWeight(getDefaultQuantityWeight(foodItemData));\n    }\n  }, [foodItemData]);\n\n  // run when quantityWeight changes\n  useEffect(() => {\n    const pathname = foodItemDataQueryString;\n\n    history.replace({ pathname });\n  }, [quantityWeight]);\n}\n\nconst getDefaultQuantityWeight = (foodItemData) => {\n  const firstAvailableWeight = _.first(_.keys(foodItemData.servings));\n\n  return {\n    selectedWeight: firstAvailableWeight,\n    selectedQuantity: 1,\n  };\n};\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport { Route, Switch } from \"react-router\";\n\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport NutritionFactsPanel from \"./NutritionFacts/NutritionFactsPanel\";\nimport HomePage from \"./HomePage\";\n\nimport useIsMobile from \"./hooks/useIsMobile\";\n\nimport useUrlEffects from \"./hooks/useUrlEffects\";\n\nimport logo from \"./assets/logo.svg\";\n\nimport \"./App.scss\";\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  useUrlEffects();\n\n  const isMobile = useIsMobile();\n  const displaySidebar = !isMobile;\n\n  const AppFooter = () => (\n    <>\n      <div className=\"app-footer-links\">\n        <a href=\"https://www.myfooddata.com/\">Home |</a>\n        <a href=\"https://www.myfooddata.com/contact.php\"> Contact |</a>\n        <a href=\"https://www.myfooddata.com/about.php\"> About |</a>\n        <a href=\"https://www.myfooddata.com/terms.php\"> Terms of Use |</a>\n        <a href=\"https://www.myfooddata.com/privacy.php\"> Privacy |</a>\n        <a href=\"https://www.myfooddata.com/faq.php\"> FAQ |</a>\n        <a href=\"https://www.myfooddata.com/sitemap.php\"> Sitemap</a>\n      </div>\n      <div className=\"app-footer-copyright\">© 2020 MyFoodData.com</div>\n    </>\n  );\n\n  return (\n    <Layout className={isMobile && \"mobile\"} style={{ minHeight: \"100vh\" }}>\n      <Header className=\"header\">\n        <a href=\"https://www.myfooddata.com\">\n          <img\n            className=\"header-logo\"\n            src={logo}\n            alt=\"my food data\"\n            height=\"100%\"\n          />\n        </a>\n      </Header>\n\n      <Content>\n        <Switch>\n          <Route path=\"/nutrition-facts/:foodName/:weight?/:quantity?\">\n            {displaySidebar && (\n              <Sidebar className=\"ant-layout-content__sidebar\" />\n            )}\n\n            <NutritionFactsPanel className=\"ant-layout-content__nutrition-facts-panel\" />\n          </Route>\n\n          {/* default route */}\n          <Route>\n            <HomePage className=\"ant-layout-content__home-page\" />\n          </Route>\n        </Switch>\n      </Content>\n\n      <Footer className=\"app-footer\">\n        <AppFooter />\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"myFoodDataClone\">\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["assets/logo.svg","util/format_food_item_data.js","AppContext.js","Sidebar/ServingSizeSelectionRow.js","Sidebar/SidebarFoodCard.js","Sidebar/SidebarFoodList.js","Sidebar/Sidebar.js","NutritionFacts/NutritionFactsTable.js","NutritionFacts/NutritionFactsHistogram.js","NutritionFacts/NutritionFactsPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","missingData","value","percentage","formatFoodItemData","foodItemData","nutritionFactTable","nutritionFactsByKey","selectedQuantity","selectedWeightIndex","ratio","_","toNumber","wt_arr","key","divsor","base","Math","round","nutritionFactsFromFoodData","calories","totalFat","saturatedFat","transFat","cholesterol","sodium","totalCarbohydrates","fiber","sugar","addedSugar","protein","vitaminC","vitaminD","iron","calcium","potassium","phosphorus","calculateNutritionalFactTable","id","ndbstring","name","names","AppContext","createContext","Provider","DEFAULT_SELECTED","Option","Select","MIN_QUANTITY","MAX_QUANTITY","ServingSizeSelectionRow","className","useContext","updateFoodWithSelectedQuantity","updateFoodWithSelectedWeight","servingDescriptions","servingWeights","map","toInteger","servings","zip","description","weight","selectedWeight","align","span","min","max","placeholder","onChange","CloseOutlined","flex","style","width","dropdownMatchSelectWidth","serving","index","SidebarFoodCard","clearFoodItemData","closeButton","title","type","icon","onClick","size","extra","SideBarFoodList","dataSource","renderItem","item","Item","Sidebar","useState","searchValue","setSearchValue","foodItems","setFoodItems","fetchFoodItemData","searchFoodItems","debounce","foodSearchString","isEmpty","undefined","Axios","get","then","foodResponseItems","data","trim","split","allowClear","showSearch","showArrow","notFoundContent","filterOption","onSearch","searchedFoodItem","console","log","foodItem","substringToHighlight","caseInsensitiveGlobalSearch","RegExp","replace","text","substring","foodItemWithHighlights","SidebarFoodList","NutritionFactsTable","justify","NutritionFactsHistogram","WATER","FAT","CHOCDF","PROCNT","ALC","informationPresent","water","Number","fat","carbs","alcohol","containsAlcohol","componentTotal","waterPercentage","fatPercentage","carbsPercentage","proteinPercentage","alcoholPercentage","height","NutritionFactsPanel","isMobile","displayDrawer","setDisplayDrawer","placement","closable","onClose","visible","longname","datatype","Header","Layout","Content","Footer","Sider","App","toggleMobile","minHeight","href","src","logo","alt","breakpoint","collapsedWidth","trigger","onCollapse","Boolean","window","location","hostname","match","ReactDOM","render","children","setFoodItemData","setIsMobile","foodItemDataWithDefaultSelected","formatAndUpdateFoodItemData","useEffect","sugarAppleExample","foodItemName","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b63db577.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8357fd40.svg\";","import _ from \"lodash\";\n\nfunction formatFoodItemData(foodItemData) {\n  const nutritionFactTable = calculateNutritionalFactTable(foodItemData);\n\n  return {\n    ...foodItemData,\n    id: foodItemData.ndbstring,\n    name: foodItemData.names[0],\n    nutritionFactTable,\n  };\n}\n\nfunction calculateNutritionalFactTable(foodItemData) {\n  const nutritionFactsByKey = nutritionFactsFromFoodData(foodItemData);\n\n  return {\n    calories: nutritionFactsByKey(\"ENERC_KCAL\", 2000),\n    totalFat: nutritionFactsByKey(\"FAT\", 65),\n    saturatedFat: nutritionFactsByKey(\"FASAT\", 20),\n    transFat: nutritionFactsByKey(\"FATRN\"),\n    cholesterol: nutritionFactsByKey(\"CHOLE\", 300),\n    sodium: nutritionFactsByKey(\"NA\", 2400),\n    totalCarbohydrates: nutritionFactsByKey(\"CHOCDF\", 300),\n    fiber: nutritionFactsByKey(\"FIBTG\", 25),\n    sugar: nutritionFactsByKey(\"SUGAR\", 50),\n    addedSugar: nutritionFactsByKey(\"ADD_SG\", 50),\n    protein: nutritionFactsByKey(\"PROCNT\", 50),\n    vitaminC: nutritionFactsByKey(\"VITC\", 90),\n    vitaminD: nutritionFactsByKey(\"VITD\", 20),\n    iron: nutritionFactsByKey(\"FE\", 18),\n    calcium: nutritionFactsByKey(\"CA\", 1300),\n    potassium: nutritionFactsByKey(\"K\", 4700),\n    phosphorus: nutritionFactsByKey(\"P\", 1250),\n  };\n}\n\nconst missingData = { value: \"~\", percentage: \"~\" };\n\nfunction nutritionFactsFromFoodData(foodItemData) {\n  const { selectedQuantity, selectedWeightIndex } = foodItemData;\n  const ratio = _.toNumber(foodItemData.wt_arr[selectedWeightIndex]) / 100;\n\n  return (key, divsor = 1) => {\n    if (!foodItemData[key][0]) return missingData;\n\n    const base = _.toNumber(foodItemData[key]) * ratio * selectedQuantity;\n\n    return {\n      value: Math.round((base * 10) / 10),\n      percentage: Math.round((base / (1.0 * divsor)) * 100),\n    };\n  };\n}\n\nexport default formatFoodItemData;\n","import React, { createContext, useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nimport sugarAppleExample from \"./fixtures/sugar_apple.json\";\nimport formatFoodItemData from \"./util/format_food_item_data\";\n\nconst AppContext = createContext();\n\nconst { Provider } = AppContext;\n\nconst DEFAULT_SELECTED = { selectedQuantity: 1, selectedWeightIndex: 0 };\n\n// This context provider is passed to any component requiring the context\nexport const AppProvider = ({ children }) => {\n  const [foodItemData, setFoodItemData] = useState();\n  const [isMobile, setIsMobile] = useState(false);\n  const [displayDrawer, setDisplayDrawer] = useState(false);\n\n  useEffect(() => {\n    formatAndUpdateFoodItemData(\n      foodItemDataWithDefaultSelected(sugarAppleExample)\n    );\n  }, []);\n\n  function foodItemDataWithDefaultSelected(foodItemData) {\n    return { ...foodItemData, ...DEFAULT_SELECTED };\n  }\n\n  function formatAndUpdateFoodItemData(foodItemData) {\n    setFoodItemData(formatFoodItemData(foodItemData));\n  }\n\n  function fetchFoodItemData(foodItemName) {\n    setDisplayDrawer(false);\n\n    Axios.get(\n      `https://us-central1-fasttripfinder-199123.cloudfunctions.net/my-food-data-proxy/?query=data-update-nf.php?name=${foodItemName}`\n    ).then(({ data }) => {\n      formatAndUpdateFoodItemData(foodItemDataWithDefaultSelected(data));\n    });\n  }\n\n  function updateFoodWithSelectedQuantity(foodItemData, selectedQuantity) {\n    formatAndUpdateFoodItemData({\n      ...foodItemData,\n      selectedQuantity,\n    });\n  }\n\n  function updateFoodWithSelectedWeight(foodItemData, selectedWeightIndex) {\n    formatAndUpdateFoodItemData({\n      ...foodItemData,\n      selectedWeightIndex,\n    });\n  }\n\n  function toggleMobile() {\n    setIsMobile(!isMobile);\n  }\n\n  const clearFoodItemData = () => setFoodItemData(null);\n\n  return (\n    <Provider\n      value={{\n        foodItemData,\n        fetchFoodItemData,\n        clearFoodItemData,\n\n        updateFoodWithSelectedQuantity,\n        updateFoodWithSelectedWeight,\n\n        isMobile,\n        toggleMobile,\n\n        displayDrawer,\n        setDisplayDrawer,\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n\nexport default AppContext;\n","import React, { useContext } from \"react\";\nimport AppContext from \"../AppContext\";\n\nimport { InputNumber, Row, Col, Select } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nimport _ from \"lodash\";\n\nimport \"./ServingSizeSelectionRow.scss\";\n\nconst { Option } = Select;\n\nconst MIN_QUANTITY = 1;\nconst MAX_QUANTITY = 10000;\n\nfunction ServingSizeSelectionRow({ foodItemData, className }) {\n  const {\n    updateFoodWithSelectedQuantity,\n    updateFoodWithSelectedWeight,\n  } = useContext(AppContext);\n\n  const { selectedQuantity, selectedWeightIndex } = foodItemData;\n  const servingDescriptions = foodItemData[\"desc_arr\"];\n  const servingWeights = foodItemData[\"wt_arr\"].map(_.toInteger);\n  const servings = _.zip(servingDescriptions, servingWeights).map(\n    ([description, weight]) => `${description} (${weight}g)`\n  );\n\n  const selectedWeight = servings[selectedWeightIndex];\n\n  const renderServing = (serving, index) => (\n    <Option value={index} key={serving}>\n      {serving}\n    </Option>\n  );\n\n  const updateSelectedQuantity = (selectedQuantity) => {\n    if (MIN_QUANTITY <= selectedQuantity && selectedQuantity < MAX_QUANTITY) {\n      updateFoodWithSelectedQuantity(foodItemData, selectedQuantity);\n    }\n  };\n\n  const updateSelectedWeightIndex = (selectedWeightIndex) => {\n    updateFoodWithSelectedWeight(foodItemData, selectedWeightIndex);\n  };\n\n  return (\n    <div className={className}>\n      <Row className=\"serving-size-selection-row__body\" align=\"middle\">\n        <Col span={4}>\n          <InputNumber\n            min={MIN_QUANTITY}\n            max={MAX_QUANTITY}\n            value={selectedQuantity}\n            placeholder={1}\n            onChange={updateSelectedQuantity}\n            className=\"serving-size-selection-row__serving-input\"\n          />\n        </Col>\n\n        <Col span={2}>\n          <CloseOutlined />\n        </Col>\n\n        <Col flex={1}>\n          <Select\n            value={selectedWeight}\n            className=\"serving-size-selection-row__select\"\n            style={{ width: \"100%\" }}\n            dropdownMatchSelectWidth={false}\n            onChange={updateSelectedWeightIndex}\n          >\n            {servings.map(renderServing)}\n          </Select>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default ServingSizeSelectionRow;\n","import React, { useContext } from \"react\";\nimport AppContext from \"../AppContext\";\n\nimport { Card, Tooltip, Button } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nimport ServingSizeSelectionRow from \"./ServingSizeSelectionRow\";\n\nimport _ from \"lodash\";\n\nimport \"./SidebarFoodCard.scss\";\n\nfunction SidebarFoodCard({ foodItemData }) {\n  const { clearFoodItemData } = useContext(AppContext);\n\n  const closeButton = (\n    <Tooltip title=\"close\">\n      <Button\n        type=\"link\"\n        icon={<CloseOutlined />}\n        onClick={clearFoodItemData}\n        className=\"sidebar-food-card__close-button\"\n      />\n    </Tooltip>\n  );\n\n  return (\n    <Card\n      title={foodItemData.name}\n      size=\"small\"\n      extra={closeButton}\n      className=\"sidebar-food-card\"\n    >\n      <ServingSizeSelectionRow foodItemData={foodItemData} />\n    </Card>\n  );\n}\n\nexport default SidebarFoodCard;\n","import React, { useContext } from \"react\";\n\nimport { List } from \"antd\";\nimport SidebarFoodCard from \"./SidebarFoodCard\";\nimport AppContext from \"../AppContext\";\n\nfunction SideBarFoodList() {\n  const { foodItemData } = useContext(AppContext);\n\n  if (!foodItemData) return null;\n\n  const renderListItem = (item) => (\n    <List.Item key={item.name}>\n      <SidebarFoodCard foodItemData={item} />\n    </List.Item>\n  );\n\n  return (\n    foodItemData && (\n      <List dataSource={[foodItemData]} renderItem={renderListItem} />\n    )\n  );\n}\n\nexport default SideBarFoodList;\n","import React, { useState, useContext } from \"react\";\nimport AppContext from \"../AppContext\";\n\nimport { Layout, Select } from \"antd\";\nimport SidebarFoodList from \"./SidebarFoodList\";\n\nimport Axios from \"axios\";\nimport _ from \"lodash\";\n\nimport \"./Sidebar.scss\";\n\nconst { Option } = Select;\n\nfunction Sidebar() {\n  const [searchValue, setSearchValue] = useState();\n  const [foodItems, setFoodItems] = useState([]);\n\n  const { fetchFoodItemData } = useContext(AppContext);\n\n  const searchFoodItems = _.debounce((foodSearchString) => {\n    setFoodItems([]);\n\n    if (_.isEmpty(foodSearchString)) {\n      setSearchValue(undefined);\n      return;\n    }\n\n    Axios.get(\n      `https://us-central1-fasttripfinder-199123.cloudfunctions.net/my-food-data-proxy/?query=name-suggest.php?q=${foodSearchString}`\n    ).then(({ data }) => {\n      const foodResponseItems = data.trim().split(\",\");\n\n      setSearchValue(foodSearchString);\n      setFoodItems(foodResponseItems.map(_.trim));\n    });\n  }, 300);\n\n  const updateSearchedValue = (searchedFoodItem) => {\n    console.log(\"selected: \", searchedFoodItem);\n\n    if (_.isEmpty(searchedFoodItem)) {\n      setSearchValue(undefined);\n    } else {\n      setSearchValue(searchedFoodItem);\n      fetchFoodItemData(searchedFoodItem);\n    }\n  };\n\n  const renderHighlightedFoodItem = (foodItem) => {\n    return (\n      <Option key={foodItem}>\n        {foodItemWithHighlights(foodItem, searchValue)}\n      </Option>\n    );\n  };\n\n  return (\n    <Layout className=\"sidebar\">\n      <Select\n        allowClear\n        showSearch\n        showArrow={false}\n        value={searchValue}\n        placeholder=\"🔍 Find Another Food\"\n        notFoundContent={false}\n        filterOption={false}\n        onSearch={searchFoodItems}\n        onChange={updateSearchedValue}\n        className=\"sidebar-searchbar\"\n      >\n        {foodItems.map(renderHighlightedFoodItem)}\n      </Select>\n      <SidebarFoodList />\n    </Layout>\n  );\n}\n\nfunction foodItemWithHighlights(foodItem, substringToHighlight) {\n  const caseInsensitiveGlobalSearch = new RegExp(substringToHighlight, \"ig\");\n  const saltedFoodItem = _.replace(\n    foodItem,\n    caseInsensitiveGlobalSearch,\n    (text) => `<=>${text}<=>`\n  );\n\n  const splitText = saltedFoodItem.split(\"<=>\");\n\n  return splitText.map((substring, index) => {\n    const isHighlighting = index % 2 === 1;\n\n    if (isHighlighting) {\n      return (\n        <span key={index} className=\"highlighted\">\n          {substring}\n        </span>\n      );\n    }\n\n    return substring;\n  });\n}\n\nexport default Sidebar;\n","import React, { useContext } from \"react\";\nimport AppContext from \"../AppContext\";\n\nimport { Row } from \"antd\";\n\nimport \"./NutritionFactsTable.scss\";\n\nfunction NutritionFactsTable() {\n  const { foodItemData } = useContext(AppContext);\n\n  if (!foodItemData) return null;\n  const {\n    calories,\n    totalFat,\n    saturatedFat,\n    transFat,\n    cholesterol,\n    sodium,\n    totalCarbohydrates,\n    fiber,\n    sugar,\n    addedSugar,\n    protein,\n    vitaminC,\n    vitaminD,\n    iron,\n    calcium,\n    potassium,\n    phosphorus,\n  } = foodItemData.nutritionFactTable;\n\n  const AddedSugar = () => {\n    if (addedSugar.value === \"~\") {\n      return (\n        <Row className=\"no-sugar-added\">\n          <span>~ No added sugar data collected</span>\n          <b>~</b>\n        </Row>\n      );\n    }\n\n    return (\n      <Row className=\"no-sugar-added\">\n        <span>Includes {addedSugar.value}g Added Sugars</span>\n        <b>{addedSugar.percentage}</b>\n      </Row>\n    );\n  };\n\n  return (\n    <div className=\"nutrition-facts-table\">\n      <div className=\"facts-table-header\">\n        <b>Nutrition Facts</b>\n      </div>\n      <div className=\"facts-table-serving large-border-bottom\">\n        <div>\n          <b>Serving Size</b>\n        </div>\n        <div> 1 cup, quartered or chopped (125g)</div>\n      </div>\n\n      <Row justify=\"space-between\" className=\"calories medium-border-bottom\">\n        <span className=\"label\">Calories</span>\n        <span className=\"value\">{calories.value}</span>\n      </Row>\n\n      <Row justify=\"end\">\n        <b>% Daily Value *</b>\n      </Row>\n\n      <div className=\"chart\">\n        <Row>\n          <span>\n            <b>Total Fat</b> {totalFat.value}g\n          </span>\n          <b>{totalFat.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1\">\n          <span>Saturated Fat {saturatedFat.value}g</span>\n          <b>{saturatedFat.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1 thick-border-bottom\">\n          <span>\n            <em>Trans</em> Fat {transFat.value}g\n          </span>\n        </Row>\n\n        <Row className=\"thick-border-bottom\">\n          <span>\n            <b>Cholesterol</b> {cholesterol.value}mg\n          </span>\n          <b>{cholesterol.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>\n            <b>Sodium</b> {sodium.value}mg\n          </span>\n          <b>{sodium.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>\n            <b>Total Carbohydrate</b> {totalCarbohydrates.value}g\n          </span>\n          <b>{totalCarbohydrates.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1 thick-border-bottom\">\n          <span>Dietary Fiber {fiber.value}g</span>\n          <b>{fiber.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1\">\n          <span>Total Sugars {sugar.value}g</span>\n          <b>{sugar.percentage}%</b>\n        </Row>\n\n        <AddedSugar />\n\n        <Row className=\"large-border-bottom\">\n          <span>\n            <b>Protein</b> {protein.value}g\n          </span>\n          <b>{protein.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>Vitamin C {vitaminC.value}mg</span>\n          {vitaminC.percentage}%\n        </Row>\n\n        <Row>\n          <span>Vitamin D {vitaminD.value}mcg</span>\n          {vitaminD.percentage}%\n        </Row>\n\n        <Row>\n          <span>Iron {iron.value}mg</span>\n          {iron.percentage}%\n        </Row>\n\n        <Row>\n          <span>Calcium {calcium.value}mg</span>\n          {calcium.percentage}%\n        </Row>\n\n        <Row>\n          <span>Potassium {potassium.value}mg</span>\n          {potassium.percentage}%\n        </Row>\n\n        <Row className=\"medium-border-bottom\">\n          <span>Phosphorus {phosphorus.value}mg</span>\n          {phosphorus.percentage}%\n        </Row>\n\n        <Row className=\"facts-table-footer\">\n          *The % Daily Value (DV) tells you how much a nutrient in a serving of\n          food contributes to a daily diet. 2,000 calories a day is used for\n          general nutrition advice.\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default NutritionFactsTable;\n","import React, { useContext } from \"react\";\nimport AppContext from \"../AppContext\";\n\nimport { Row, Col } from \"antd\";\n\nimport _ from \"lodash\";\n\nimport \"./NutritionFactsHistogram.scss\";\n\nexport default function NutritionFactsHistogram() {\n  const { foodItemData } = useContext(AppContext);\n\n  if (!foodItemData) return null;\n\n  const { WATER, FAT, CHOCDF, PROCNT, ALC } = foodItemData;\n\n  const informationPresent =\n    WATER !== \"~\" && FAT !== \"~\" && CHOCDF !== \"~\" && PROCNT !== \"~\";\n\n  const water = Number(WATER);\n  const fat = Number(FAT);\n  const carbs = Number(CHOCDF);\n  const protein = Number(PROCNT);\n  const alcohol = Number(ALC);\n\n  const containsAlcohol = alcohol > 0;\n\n  const componentTotal = water + fat + carbs + protein + alcohol;\n\n  const waterPercentage = _.toInteger((water / componentTotal) * 100);\n  const fatPercentage = _.toInteger((fat / componentTotal) * 100);\n  const carbsPercentage = _.toInteger((carbs / componentTotal) * 100);\n  const proteinPercentage = _.toInteger((protein / componentTotal) * 100);\n  const alcoholPercentage = _.toInteger((alcohol / componentTotal) * 100);\n\n  return (\n    informationPresent && (\n      <div className=\"histograms\">\n        <div className=\"data-title\">What is this food made of?</div>\n        <div className=\"data-tile\">\n          <Row className=\"square\" align=\"bottom\">\n            <Col className=\"water\" style={{ height: `${waterPercentage}%` }} />\n\n            <Col className=\"fat\" style={{ height: `${fatPercentage}%` }} />\n\n            <Col className=\"carbs\" style={{ height: `${carbsPercentage}%` }} />\n\n            <Col\n              className=\"protein\"\n              style={{ height: `${proteinPercentage}%` }}\n            />\n\n            {containsAlcohol && (\n              <Col\n                className=\"alcohol\"\n                style={{ height: `${alcoholPercentage}%` }}\n              />\n            )}\n          </Row>\n\n          <Row className=\"legend\">\n            <Col>\n              <div>{waterPercentage}%</div>\n              <div>Water</div>\n            </Col>\n\n            <Col>\n              <div>{fatPercentage}%</div>\n              <div>Fat</div>\n            </Col>\n\n            <Col>\n              <div>{carbsPercentage}%</div>\n              <div>Carbs</div>\n            </Col>\n\n            <Col>\n              <div>{proteinPercentage}%</div>\n              <div>Protein</div>\n            </Col>\n\n            {containsAlcohol && (\n              <Col>\n                <div>{alcoholPercentage}%</div>\n                <div>Alcohol</div>\n              </Col>\n            )}\n          </Row>\n        </div>\n      </div>\n    )\n  );\n}\n","import React, { useContext } from \"react\";\n\nimport NutritionFactsTable from \"./NutritionFactsTable\";\nimport { Row, Drawer, Button } from \"antd\";\nimport NutritionFactsHistogram from \"./NutritionFactsHistogram\";\nimport AppContext from \"../AppContext\";\n\nimport \"./NutritionFactsPanel.scss\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport ServingSizeSelectionRow from \"../Sidebar/ServingSizeSelectionRow\";\n\nexport default function NutritionFactsPanel() {\n  const {\n    foodItemData,\n    isMobile,\n    displayDrawer,\n    setDisplayDrawer,\n  } = useContext(AppContext);\n\n  if (!foodItemData) return null;\n\n  const MobileHeader = () =>\n    isMobile && (\n      <>\n        <Button\n          className=\"facts-panel__button\"\n          size=\"large\"\n          onClick={() => setDisplayDrawer(true)}\n        >\n          🔍 Find Another Food\n        </Button>\n        <Drawer\n          title=\"Find Food!\"\n          placement=\"left\"\n          closable={true}\n          onClose={() => setDisplayDrawer(false)}\n          visible={displayDrawer}\n          style={{ width: \"100%\" }}\n        >\n          <Sidebar />\n        </Drawer>\n      </>\n    );\n\n  const MobileServingSizeSelector = () =>\n    isMobile && (\n      <div className=\"facts-panel-body\">\n        <Row\n          className=\"serving-selector\"\n          style={{ \"border-bottom\": \"1px solid #ddd\" }}\n        >\n          Serving Size:\n        </Row>\n\n        <ServingSizeSelectionRow className=\"serving-selector__selection-row\" foodItemData={foodItemData} />\n      </div>\n    );\n\n  return (\n    <div className=\"facts-panel\">\n      <MobileHeader />\n\n      <h1 className=\"facts-panel-header\">{foodItemData.name}</h1>\n      <div className=\"facts-panel-subheader\">{foodItemData.longname}</div>\n\n      <div>\n        <strong>Database: </strong>\n        {foodItemData.datatype}\n      </div>\n\n      <div>\n        <MobileServingSizeSelector />\n        <Row align=\"middle\" className=\"facts-panel-body\">\n          <NutritionFactsTable />\n          <NutritionFactsHistogram />\n        </Row>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\n\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport NutritionFactsPanel from \"./NutritionFacts/NutritionFactsPanel\";\n\nimport logo from \"./assets/logo.svg\";\n\nimport { Layout } from \"antd\";\nimport \"./App.scss\";\nimport AppContext from \"./AppContext\";\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nfunction App() {\n  const { toggleMobile } = useContext(AppContext);\n\n  const AppFooter = () => (\n    <>\n      <div className=\"app-footer-links\">\n        <a href=\"https://www.myfooddata.com/\">Home |</a>\n        <a href=\"https://www.myfooddata.com/contact.php\"> Contact |</a>\n        <a href=\"https://www.myfooddata.com/about.php\"> About |</a>\n        <a href=\"https://www.myfooddata.com/terms.php\"> Terms of Use |</a>\n        <a href=\"https://www.myfooddata.com/privacy.php\"> Privacy |</a>\n        <a href=\"https://www.myfooddata.com/faq.php\"> FAQ |</a>\n        <a href=\"https://www.myfooddata.com/sitemap.php\"> Sitemap</a>\n      </div>\n      <div className=\"app-footer-copyright\">© 2020 MyFoodData.com</div>\n    </>\n  );\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Header className=\"header\">\n        <a href=\"https://www.myfooddata.com\">\n          <img\n            className=\"header-logo\"\n            src={logo}\n            alt=\"my food data\"\n            height=\"100%\"\n          />\n        </a>\n      </Header>\n\n      <Layout>\n        <Sider\n          width={310}\n          breakpoint=\"md\"\n          collapsedWidth={0}\n          trigger={null}\n          onCollapse={toggleMobile}\n        >\n          <Sidebar />\n        </Sider>\n\n        <Content>\n          <NutritionFactsPanel />\n        </Content>\n      </Layout>\n\n      <Footer className=\"app-footer\">\n        <AppFooter />\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { AppProvider } from \"./AppContext\";\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
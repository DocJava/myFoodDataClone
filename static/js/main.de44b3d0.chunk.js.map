{"version":3,"sources":["assets/logo.svg","util/format_food_item_data.js","AppContext.js","Sidebar/SidebarFoodCard.js","Sidebar/SidebarFoodList.js","Sidebar/Sidebar.js","NutritionFacts/NutritionFactsTable.js","NutritionFacts/NutritionFactsHistogram.js","NutritionFacts/NutritionFactsPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","calculateNutritionalFactTable","foodItemData","selectedQuantity","selectedWeightIndex","nutritionFactsByKey","ratio","_","toNumber","wt_arr","key","divsor","missingData","base","value","Math","round","percentage","nutritionFactsFromFoodData","calories","totalFat","saturatedFat","transFat","cholesterol","sodium","totalCarbohydrates","fiber","sugar","addedSugar","protein","vitaminC","vitaminD","iron","calcium","potassium","phosphorus","formatFoodItemData","nutritionFactTable","id","ndbstring","name","names","AppContext","createContext","Provider","Option","Select","MIN_QUANTITY","MAX_QUANTITY","SidebarFoodCard","useContext","clearFoodItemData","updateFoodItemDataNutritionFactTable","servingDescriptions","servingWeights","map","toInteger","servings","zip","description","weight","useState","setSelectedWeightIndex","selectedWeight","useEffect","closeButton","title","type","icon","CloseOutlined","onClick","className","size","extra","align","span","min","max","defaultValue","onChange","style","width","dropdownMatchSelectWidth","serving","index","SideBarFoodList","dataSource","renderItem","item","Item","Sidebar","searchValue","setSearchValue","foodItems","setFoodItems","fetchFoodItemData","searchFoodItems","debounce","foodSearchString","isEmpty","undefined","Axios","get","then","foodResponseItems","data","trim","split","allowClear","showSearch","showArrow","placeholder","notFoundContent","filterOption","onSearch","searchedFoodItem","console","log","foodItem","substringToHighlight","caseInsensitiveGlobalSearch","RegExp","replace","text","substring","foodItemWithHighlights","SidebarFoodList","NutritionFactsTable","justify","NutritionFactsHistogram","WATER","FAT","CHOCDF","PROCNT","ALC","informationPresent","water","Number","fat","carbs","alcohol","containsAlcohol","componentTotal","waterPercentage","fatPercentage","carbsPercentage","proteinPercentage","alcoholPercentage","height","NutritionFactsPanel","longname","datatype","Header","Layout","Content","Footer","Sider","App","minHeight","href","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","children","setFoodItemData","formatAndUpdateFoodItemData","fooItemData","hamburgerExample","foodItemName","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de44b3d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8357fd40.svg\";","import _ from \"lodash\";\n\nfunction formatFoodItemData(\n  foodItemData,\n  selectedQuantity = 1,\n  selectedWeightIndex = 0\n) {\n  const nutritionFactTable = calculateNutritionalFactTable(\n    foodItemData,\n    selectedQuantity,\n    selectedWeightIndex\n  );\n\n  return {\n    ...foodItemData,\n    id: foodItemData.ndbstring,\n    name: foodItemData.names[0],\n    nutritionFactTable,\n  };\n}\n\nexport function calculateNutritionalFactTable(\n  foodItemData,\n  selectedQuantity,\n  selectedWeightIndex\n) {\n  const nutritionFactsByKey = nutritionFactsFromFoodData(\n    foodItemData,\n    selectedQuantity,\n    selectedWeightIndex\n  );\n\n  return {\n    calories: nutritionFactsByKey(\"ENERC_KCAL\", 2000),\n    totalFat: nutritionFactsByKey(\"FAT\", 65),\n    saturatedFat: nutritionFactsByKey(\"FASAT\", 20),\n    transFat: nutritionFactsByKey(\"FATRN\"),\n    cholesterol: nutritionFactsByKey(\"CHOLE\", 300),\n    sodium: nutritionFactsByKey(\"NA\", 2400),\n    totalCarbohydrates: nutritionFactsByKey(\"CHOCDF\", 300),\n    fiber: nutritionFactsByKey(\"FIBTG\", 25),\n    sugar: nutritionFactsByKey(\"SUGAR\", 50),\n    addedSugar: nutritionFactsByKey(\"ADD_SG\", 50),\n    protein: nutritionFactsByKey(\"PROCNT\", 50),\n    vitaminC: nutritionFactsByKey(\"VITC\", 90),\n    vitaminD: nutritionFactsByKey(\"VITD\", 20),\n    iron: nutritionFactsByKey(\"FE\", 18),\n    calcium: nutritionFactsByKey(\"CA\", 1300),\n    potassium: nutritionFactsByKey(\"K\", 4700),\n    phosphorus: nutritionFactsByKey(\"P\", 1250),\n  };\n}\n\nconst missingData = { value: \"~\", percentage: \"~\" };\n\nfunction nutritionFactsFromFoodData(\n  foodItemData,\n  selectedQuantity,\n  selectedWeightIndex\n) {\n  const ratio = _.toNumber(foodItemData.wt_arr[selectedWeightIndex]) / 100;\n\n  return (key, divsor = 1) => {\n    if (!foodItemData[key][0]) return missingData;\n\n    const base = _.toNumber(foodItemData[key]) * ratio * selectedQuantity;\n\n    return {\n      value: Math.round((base * 10) / 10),\n      percentage: Math.round((base / (1.0 * divsor)) * 100),\n    };\n  };\n}\n\nexport default formatFoodItemData;\n","import React, { createContext, useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nimport hamburgerExample from \"./fixtures/hamburger.json\";\nimport formatFoodItemData, {\n  calculateNutritionalFactTable,\n} from \"./util/format_food_item_data\";\n\nconst AppContext = createContext();\n\nconst { Provider } = AppContext;\n\n// This context provider is passed to any component requiring the context\nexport const AppProvider = ({ children }) => {\n  const [foodItemData, setFoodItemData] = useState();\n\n  useEffect(() => {\n    formatAndUpdateFoodItemData(hamburgerExample);\n  }, []);\n\n  function formatAndUpdateFoodItemData(fooItemData) {\n    setFoodItemData(formatFoodItemData(fooItemData));\n  }\n\n  function fetchFoodItemData(foodItemName) {\n    Axios.get(\n      `https://us-central1-fasttripfinder-199123.cloudfunctions.net/my-food-data-proxy/?query=data-update-nf.php?name=${foodItemName}`\n    ).then(({ data }) => {\n      formatAndUpdateFoodItemData(data);\n    });\n  }\n\n  function updateFoodItemDataNutritionFactTable({\n    selectedQuantity = 1,\n    selectedWeightIndex = 0,\n  }) {\n    const nutritionFactTable = calculateNutritionalFactTable(\n      foodItemData,\n      selectedQuantity,\n      selectedWeightIndex\n    );\n\n    setFoodItemData({\n      ...foodItemData,\n      nutritionFactTable,\n    });\n  }\n\n  const clearFoodItemData = () => setFoodItemData(null);\n\n  return (\n    <Provider\n      value={{\n        foodItemData,\n        fetchFoodItemData,\n        clearFoodItemData,\n        updateFoodItemDataNutritionFactTable,\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n\nexport default AppContext;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport AppContext from \"../AppContext\";\n\nimport { Card, Tooltip, Button, InputNumber, Row, Col, Select } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nimport _ from \"lodash\";\n\nimport \"./SidebarFoodCard.scss\";\n\nconst { Option } = Select;\n\nconst MIN_QUANTITY = 1;\nconst MAX_QUANTITY = 10000;\n\nfunction SidebarFoodCard({ foodItemData }) {\n  const {\n    clearFoodItemData,\n    updateFoodItemDataNutritionFactTable,\n  } = useContext(AppContext);\n\n  const servingDescriptions = foodItemData[\"desc_arr\"];\n  const servingWeights = foodItemData[\"wt_arr\"].map(_.toInteger);\n  const servings = _.zip(servingDescriptions, servingWeights).map(\n    ([description, weight]) => `${description} (${weight}g)`\n  );\n\n  const [selectedWeightIndex, setSelectedWeightIndex] = useState(0);\n  const selectedWeight = servings[selectedWeightIndex];\n\n  useEffect(() => {\n    setSelectedWeightIndex(0);\n  }, [foodItemData.id]);\n\n  const closeButton = (\n    <Tooltip title=\"close\">\n      <Button\n        type=\"link\"\n        icon={<CloseOutlined />}\n        onClick={clearFoodItemData}\n        className=\"sidebar-food-card__close-button\"\n      />\n    </Tooltip>\n  );\n\n  const renderServing = (serving, index) => (\n    <Option value={index} key={serving}>\n      {serving}\n    </Option>\n  );\n\n  const updateQuantity = (selectedQuantity) => {\n    if (MIN_QUANTITY < selectedQuantity && selectedQuantity < MAX_QUANTITY) {\n      updateFoodItemDataNutritionFactTable({ selectedQuantity });\n    }\n  };\n\n  const updateSelectedWeight = (selectedWeightIndex) => {\n    updateFoodItemDataNutritionFactTable({ selectedWeightIndex });\n    setSelectedWeightIndex(selectedWeightIndex);\n  };\n\n  return (\n    <Card\n      title={foodItemData.name}\n      size=\"small\"\n      extra={closeButton}\n      className=\"sidebar-food-card\"\n    >\n      <Row className=\"sidebar-food-card__body\" align=\"middle\">\n        <Col span={2}>\n          <InputNumber\n            min={MIN_QUANTITY}\n            max={MAX_QUANTITY}\n            defaultValue={1}\n            onChange={updateQuantity}\n            className=\"sidebar-food-card__serving-input\"\n          />\n        </Col>\n\n        <Col span={2}>\n          <CloseOutlined />\n        </Col>\n\n        <Col span={20}>\n          <Select\n            value={selectedWeight}\n            style={{ width: \"100%\" }}\n            dropdownMatchSelectWidth={false}\n            onChange={updateSelectedWeight}\n          >\n            {servings.map(renderServing)}\n          </Select>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nexport default SidebarFoodCard;\n","import React, { useContext } from \"react\";\n\nimport { List } from \"antd\";\nimport SidebarFoodCard from \"./SidebarFoodCard\";\nimport AppContext from \"../AppContext\";\n\nfunction SideBarFoodList() {\n  const { foodItemData } = useContext(AppContext);\n\n  if (!foodItemData) return null;\n\n  const renderListItem = (item) => (\n    <List.Item key={item.name}>\n      <SidebarFoodCard foodItemData={item} />\n    </List.Item>\n  );\n\n  return (\n    foodItemData && (\n      <List dataSource={[foodItemData]} renderItem={renderListItem} />\n    )\n  );\n}\n\nexport default SideBarFoodList;\n","import React, { useState, useContext } from \"react\";\nimport AppContext from \"../AppContext\";\n\nimport { Layout, Select } from \"antd\";\nimport SidebarFoodList from \"./SidebarFoodList\";\n\nimport Axios from \"axios\";\nimport _ from \"lodash\";\n\nimport \"./Sidebar.scss\";\n\nconst { Option } = Select;\n\nfunction Sidebar() {\n  const [searchValue, setSearchValue] = useState();\n  const [foodItems, setFoodItems] = useState([]);\n\n  const { fetchFoodItemData } = useContext(AppContext);\n\n  const searchFoodItems = _.debounce((foodSearchString) => {\n    setFoodItems([]);\n\n    if (_.isEmpty(foodSearchString)) {\n      setSearchValue(undefined);\n      return;\n    }\n\n    Axios.get(\n      `https://us-central1-fasttripfinder-199123.cloudfunctions.net/my-food-data-proxy/?query=name-suggest.php?q=${foodSearchString}`\n    ).then(({ data }) => {\n      const foodResponseItems = data.trim().split(\",\");\n\n      setSearchValue(foodSearchString);\n      setFoodItems(foodResponseItems.map(_.trim));\n    });\n  }, 300);\n\n  const updateSearchedValue = (searchedFoodItem) => {\n    console.log(\"selected: \", searchedFoodItem);\n\n    if (_.isEmpty(searchedFoodItem)) {\n      setSearchValue(undefined);\n    } else {\n      setSearchValue(searchedFoodItem);\n      fetchFoodItemData(searchedFoodItem);\n    }\n  };\n\n  const renderHighlightedFoodItem = (foodItem) => {\n    return (\n      <Option key={foodItem}>\n        {foodItemWithHighlights(foodItem, searchValue)}\n      </Option>\n    );\n  };\n\n  return (\n    <Layout className=\"sidebar\">\n      <Select\n        allowClear\n        showSearch\n        showArrow={false}\n        value={searchValue}\n        placeholder=\"🔍 Find Another Food\"\n        notFoundContent={false}\n        filterOption={false}\n        onSearch={searchFoodItems}\n        onChange={updateSearchedValue}\n        className=\"sidebar-searchbar\"\n      >\n        {foodItems.map(renderHighlightedFoodItem)}\n      </Select>\n      <SidebarFoodList />\n    </Layout>\n  );\n}\n\nfunction foodItemWithHighlights(foodItem, substringToHighlight) {\n  const caseInsensitiveGlobalSearch = new RegExp(substringToHighlight, \"ig\");\n  const saltedFoodItem = _.replace(\n    foodItem,\n    caseInsensitiveGlobalSearch,\n    (text) => `<=>${text}<=>`\n  );\n\n  const splitText = saltedFoodItem.split(\"<=>\");\n\n  return splitText.map((substring, index) => {\n    const isHighlighting = index % 2 === 1;\n\n    if (isHighlighting) {\n      return (\n        <span key={index} className=\"highlighted\">\n          {substring}\n        </span>\n      );\n    }\n\n    return substring;\n  });\n}\n\nexport default Sidebar;\n","import React, { useContext } from \"react\";\nimport AppContext from \"../AppContext\";\n\nimport { Row } from \"antd\";\n\nimport \"./NutritionFactsTable.scss\";\n\nfunction NutritionFactsTable() {\n  const { foodItemData } = useContext(AppContext);\n\n  if (!foodItemData) return null;\n  const {\n    calories,\n    totalFat,\n    saturatedFat,\n    transFat,\n    cholesterol,\n    sodium,\n    totalCarbohydrates,\n    fiber,\n    sugar,\n    addedSugar,\n    protein,\n    vitaminC,\n    vitaminD,\n    iron,\n    calcium,\n    potassium,\n    phosphorus,\n  } = foodItemData.nutritionFactTable;\n\n  const AddedSugar = () => {\n    if (addedSugar.value === \"~\") {\n      return (\n        <Row className=\"no-sugar-added\">\n          <span>~ No added sugar data collected</span>\n          <b>~</b>\n        </Row>\n      );\n    }\n\n    return (\n      <Row className=\"no-sugar-added\">\n        <span>Includes {addedSugar.value}g Added Sugars</span>\n        <b>{addedSugar.percentage}</b>\n      </Row>\n    );\n  };\n\n  return (\n    <div className=\"nutrition-facts-table\">\n      <div className=\"facts-table-header\">\n        <b>Nutrition Facts</b>\n      </div>\n      <div className=\"facts-table-serving large-border-bottom\">\n        <div>\n          <b>Serving Size</b>\n        </div>\n        <div> 1 cup, quartered or chopped (125g)</div>\n      </div>\n\n      <Row justify=\"space-between\" className=\"calories medium-border-bottom\">\n        <span className=\"label\">Calories</span>\n        <span className=\"value\">{calories.value}</span>\n      </Row>\n\n      <Row justify=\"end\">\n        <b>% Daily Value *</b>\n      </Row>\n\n      <div className=\"chart\">\n        <Row>\n          <span>\n            <b>Total Fat</b> {totalFat.value}g\n          </span>\n          <b>{totalFat.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1\">\n          <span>Saturated Fat {saturatedFat.value}g</span>\n          <b>{saturatedFat.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1 thick-border-bottom\">\n          <span>\n            <em>Trans</em> Fat {transFat.value}g\n          </span>\n        </Row>\n\n        <Row className=\"thick-border-bottom\">\n          <span>\n            <b>Cholesterol</b> {cholesterol.value}mg\n          </span>\n          <b>{cholesterol.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>\n            <b>Sodium</b> {sodium.value}mg\n          </span>\n          <b>{sodium.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>\n            <b>Total Carbohydrate</b> {totalCarbohydrates.value}g\n          </span>\n          <b>{totalCarbohydrates.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1 thick-border-bottom\">\n          <span>Dietary Fiber {fiber.value}g</span>\n          <b>{fiber.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1\">\n          <span>Total Sugars {sugar.value}g</span>\n          <b>{sugar.percentage}%</b>\n        </Row>\n\n        <AddedSugar />\n\n        <Row className=\"large-border-bottom\">\n          <span>\n            <b>Protein</b> {protein.value}g\n          </span>\n          <b>{protein.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>Vitamin C {vitaminC.value}mg</span>\n          {vitaminC.percentage}%\n        </Row>\n\n        <Row>\n          <span>Vitamin D {vitaminD.value}mcg</span>\n          {vitaminD.percentage}%\n        </Row>\n\n        <Row>\n          <span>Iron {iron.value}mg</span>\n          {iron.percentage}%\n        </Row>\n\n        <Row>\n          <span>Calcium {calcium.value}mg</span>\n          {calcium.percentage}%\n        </Row>\n\n        <Row>\n          <span>Potassium {potassium.value}mg</span>\n          {potassium.percentage}%\n        </Row>\n\n        <Row className=\"medium-border-bottom\">\n          <span>Phosphorus {phosphorus.value}mg</span>\n          {phosphorus.percentage}%\n        </Row>\n\n        <Row className=\"facts-table-footer\">\n          *The % Daily Value (DV) tells you how much a nutrient in a serving of\n          food contributes to a daily diet. 2,000 calories a day is used for\n          general nutrition advice.\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default NutritionFactsTable;\n","import React, { useContext } from \"react\";\nimport AppContext from \"../AppContext\";\n\nimport { Row, Col } from \"antd\";\n\nimport _ from \"lodash\";\n\nimport \"./NutritionFactsHistogram.scss\";\n\nexport default function NutritionFactsHistogram() {\n  const { foodItemData } = useContext(AppContext);\n\n  if (!foodItemData) return null;\n\n  const { WATER, FAT, CHOCDF, PROCNT, ALC } = foodItemData;\n\n  const informationPresent =\n    WATER !== \"~\" && FAT !== \"~\" && CHOCDF !== \"~\" && PROCNT !== \"~\";\n\n  const water = Number(WATER);\n  const fat = Number(FAT);\n  const carbs = Number(CHOCDF);\n  const protein = Number(PROCNT);\n  const alcohol = Number(ALC);\n\n  const containsAlcohol = alcohol > 0;\n\n  const componentTotal = water + fat + carbs + protein + alcohol;\n\n  const waterPercentage = _.toInteger((water / componentTotal) * 100);\n  const fatPercentage = _.toInteger((fat / componentTotal) * 100);\n  const carbsPercentage = _.toInteger((carbs / componentTotal) * 100);\n  const proteinPercentage = _.toInteger((protein / componentTotal) * 100);\n  const alcoholPercentage = _.toInteger((alcohol / componentTotal) * 100);\n\n  return (\n    informationPresent && (\n      <div className=\"histograms\">\n        <div className=\"data-title\">What is this food made of?</div>\n        <div className=\"data-tile\">\n          <Row className=\"square\" align=\"bottom\">\n            <Col className=\"water\" style={{ height: `${waterPercentage}%` }} />\n\n            <Col className=\"fat\" style={{ height: `${fatPercentage}%` }} />\n\n            <Col className=\"carbs\" style={{ height: `${carbsPercentage}%` }} />\n\n            <Col\n              className=\"protein\"\n              style={{ height: `${proteinPercentage}%` }}\n            />\n\n            {containsAlcohol && (\n              <Col\n                className=\"alcohol\"\n                style={{ height: `${alcoholPercentage}%` }}\n              />\n            )}\n          </Row>\n\n          <Row className=\"legend\">\n            <Col>\n              <div>{waterPercentage}%</div>\n              <div>Water</div>\n            </Col>\n\n            <Col>\n              <div>{fatPercentage}%</div>\n              <div>Fat</div>\n            </Col>\n\n            <Col>\n              <div>{carbsPercentage}%</div>\n              <div>Carbs</div>\n            </Col>\n\n            <Col>\n              <div>{proteinPercentage}%</div>\n              <div>Protein</div>\n            </Col>\n\n            {containsAlcohol && (\n              <Col>\n                <div>{alcoholPercentage}%</div>\n                <div>Alcohol</div>\n              </Col>\n            )}\n          </Row>\n        </div>\n      </div>\n    )\n  );\n}\n","import React, { useContext } from \"react\";\n\nimport NutritionFactsTable from \"./NutritionFactsTable\";\nimport { Row } from \"antd\";\nimport NutritionFactsHistogram from \"./NutritionFactsHistogram\";\nimport AppContext from \"../AppContext\";\n\nimport \"./NutritionFactsPanel.scss\";\n\nexport default function NutritionFactsPanel() {\n  const { foodItemData } = useContext(AppContext);\n\n  if (!foodItemData) return null;\n  return (\n    <div className=\"facts-panel\">\n      <h1 className=\"facts-panel-header\">{foodItemData.name}</h1>\n      <div className=\"facts-panel-subheader\">{foodItemData.longname}</div>\n      <div>\n        <strong>Database:</strong>\n        {foodItemData.datatype}\n      </div>\n      <Row align=\"middle\" className=\"facts-panel-body\">\n        <NutritionFactsTable />\n        <NutritionFactsHistogram />\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport NutritionFactsPanel from \"./NutritionFacts/NutritionFactsPanel\";\n\nimport logo from \"./assets/logo.svg\";\n\nimport { Layout } from \"antd\";\nimport \"./App.scss\";\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nfunction App() {\n  const AppFooter = () => (\n    <>\n      <div className=\"app-footer-links\">\n        <a href=\"https://www.myfooddata.com/\">Home |</a>\n        <a href=\"https://www.myfooddata.com/contact.php\"> Contact |</a>\n        <a href=\"https://www.myfooddata.com/about.php\"> About |</a>\n        <a href=\"https://www.myfooddata.com/terms.php\"> Terms of Use |</a>\n        <a href=\"https://www.myfooddata.com/privacy.php\"> Privacy |</a>\n        <a href=\"https://www.myfooddata.com/faq.php\"> FAQ |</a>\n        <a href=\"https://www.myfooddata.com/sitemap.php\"> Sitemap</a>\n      </div>\n      <div className=\"app-footer-copyright\">© 2020 MyFoodData.com</div>\n    </>\n  );\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Header className=\"header\">\n        <a href=\"https://www.myfooddata.com\">\n          <img\n            className=\"header-logo\"\n            src={logo}\n            alt=\"my food data\"\n            height=\"100%\"\n          />\n        </a>\n      </Header>\n\n      <Layout>\n        <Sider width={310}>\n          <Sidebar />\n        </Sider>\n\n        <Content>\n          <NutritionFactsPanel />\n        </Content>\n      </Layout>\n\n      <Footer className=\"app-footer\">\n        <AppFooter />\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { AppProvider } from \"./AppContext\";\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["assets/logo.svg","hooks/useStore.js","Sidebar/ServingSizeSelectionRow.js","Sidebar/SidebarFoodCard.js","Sidebar/SidebarFoodList.js","Searchbar/Searchbar.js","Sidebar/Sidebar.js","NutritionFacts/NutritionFactsTable.js","NutritionFacts/NutritionFactsHistogram.js","hooks/useIsMobile.js","NutritionFacts/NutritionFactsPanel.js","HomePage.js","App.js","serviceWorker.js","util/format_food_item_data.js","models/FoodItemDataModel.js","models/FoodItemDataStoreModel.js","index.js","models/RootStoreModel.js"],"names":["module","exports","useFoodItemDataStore","useContext","MobXProviderContext","store","foodItemDataStore","Option","Select","MIN_QUANTITY","MAX_QUANTITY","observer","foodItemData","servings","_","entries","className","align","span","min","max","value","selectedQuantity","placeholder","onChange","setSelectedQuantity","CloseOutlined","selectedWeight","style","width","dropdownMatchSelectWidth","setSelectedWeight","map","servingKey","description","key","SidebarFoodCard","removeFoodItemData","closeButton","title","type","icon","onClick","name","size","extra","foodItemDatas","length","dataSource","renderItem","item","Item","Searchbar","useState","searchValue","setSearchValue","foodItems","setFoodItems","searchFoodItems","debounce","foodSearchString","isEmpty","Axios","get","then","foodResponseItems","data","trim","split","allowClear","showSearch","showArrow","notFoundContent","filterOption","onSearch","searchedFoodItem","console","log","setFoodItemDataFromName","foodItem","substringToHighlight","caseInsensitiveGlobalSearch","RegExp","replace","text","substring","index","foodItemWithHighlights","Sidebar","SidebarFoodList","foodItemDataNutritionFacts","nutritionFacts","calories","totalFat","saturatedFat","transFat","cholesterol","sodium","totalCarbohydrates","fiber","sugar","addedSugar","protein","vitaminC","vitaminD","iron","calcium","potassium","phosphorus","servingDescription","justify","percentage","NutritionFactsHistogram","WATER","FAT","CHOCDF","PROCNT","ALC","informationPresent","water","Number","fat","carbs","alcohol","containsAlcohol","componentTotal","waterPercentage","toInteger","fatPercentage","carbsPercentage","proteinPercentage","alcoholPercentage","height","MOBILE_BREAKPOINT","useIsMobile","window","innerWidth","isMobile","setIsMobile","useEffect","isMobileListener","nextIsMobile","addEventListener","removeEventListener","useRouteMatch","params","foodName","weight","quantity","displayDrawer","setDisplayDrawer","placement","closable","onClose","visible","food_description","data_db_name","borderBottom","HomePage","Header","Layout","Content","Footer","App","displaySidebar","minHeight","href","src","logo","alt","path","Boolean","location","hostname","match","calculateNutritionalFactTable","nutritionFactsByKey","ratio","toNumber","dailyValue","missingData","base","Math","round","nutritionFactsFromFoodData","validQuantity","validServingWeight","servingWeight","has","first","keys","NumberOrNullType","types","maybeNull","number","FoodItemDataModel","model","NDB_No","identifier","name3","string","servingsizes","ENERC_KCAL","FASAT","FATRN","CHOLE","NA","FIBTG","SUGAR","ADD_SG","VITC","VITD","FE","CA","K","P","optional","_selectedWeight","actions","self","updateStore","updatePathname","getRoot","views","servingSizes","JSON","parse","mapValues","queryString","FoodItemDataStoreModel","array","pathname","fetchFoodItemData","flow","create","remove","rootStore","volatile","_self","router","setRouter","oldPathname","newPathname","push","ReactDOM","render","basename","rootStoreState","useMemo","history","useHistory","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a95bd97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8357fd40.svg\";","import { useContext } from \"react\";\nimport { MobXProviderContext } from \"mobx-react\";\n\nexport function useStore() {\n  return useContext(MobXProviderContext).store;\n}\n\nexport function useFoodItemDataStore() {\n  return useStore().foodItemDataStore;\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { InputNumber, Row, Col, Select } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nimport _ from \"lodash\";\n\nimport \"./ServingSizeSelectionRow.scss\";\n\nconst { Option } = Select;\n\nconst MIN_QUANTITY = 1;\nconst MAX_QUANTITY = 10000;\n\nfunction ServingSizeSelectionRow({ foodItemData }) {\n  const servings = _.entries(foodItemData.servings);\n\n  const renderServing = ([servingKey, { description }]) => (\n    <Option value={servingKey} key={servingKey}>\n      {description}\n    </Option>\n  );\n\n  const updateSelectedQuantity = (selectedQuantity) => {\n    if (MIN_QUANTITY <= selectedQuantity && selectedQuantity < MAX_QUANTITY) {\n      foodItemData.setSelectedQuantity(selectedQuantity);\n    }\n  };\n\n  return (\n    <Row className=\"serving-size-selection-row__body\" align=\"middle\">\n      <Col span={4}>\n        <InputNumber\n          min={MIN_QUANTITY}\n          max={MAX_QUANTITY}\n          value={foodItemData.selectedQuantity}\n          placeholder={1}\n          onChange={updateSelectedQuantity}\n          className=\"serving-size-selection-row__serving-input\"\n        />\n      </Col>\n\n      <Col span={2}>\n        <CloseOutlined />\n      </Col>\n\n      <Col span={18}>\n        <Select\n          value={foodItemData.selectedWeight}\n          className=\"serving-size-selection-row__select\"\n          style={{ width: \"100%\" }}\n          dropdownMatchSelectWidth={false}\n          onChange={foodItemData.setSelectedWeight}\n        >\n          {servings.map(renderServing)}\n        </Select>\n      </Col>\n    </Row>\n  );\n}\n\nexport default observer(ServingSizeSelectionRow);\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport { useFoodItemDataStore } from \"../hooks/useStore\";\n\nimport { Card, Tooltip, Button } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nimport ServingSizeSelectionRow from \"./ServingSizeSelectionRow\";\n\nimport \"./SidebarFoodCard.scss\";\n\nfunction SidebarFoodCard({ foodItemData }) {\n  const { removeFoodItemData } = useFoodItemDataStore();\n\n  const remove = () => removeFoodItemData(foodItemData);\n\n  const closeButton = (\n    <Tooltip title=\"close\">\n      <Button\n        type=\"link\"\n        icon={<CloseOutlined />}\n        onClick={remove}\n        className=\"sidebar-food-card__close-button\"\n      />\n    </Tooltip>\n  );\n\n  return (\n    <Card\n      title={foodItemData.name}\n      size=\"small\"\n      extra={closeButton}\n      className=\"sidebar-food-card\"\n    >\n      <ServingSizeSelectionRow foodItemData={foodItemData} />\n    </Card>\n  );\n}\n\nexport default SidebarFoodCard;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { List } from \"antd\";\nimport SidebarFoodCard from \"./SidebarFoodCard\";\n\nimport { useFoodItemDataStore } from \"../hooks/useStore\";\n\nfunction SideBarFoodList() {\n  const { foodItemDatas } = useFoodItemDataStore();\n\n  if (foodItemDatas.length === 0) return null;\n\n  const renderListItem = (item) => (\n    <List.Item key={item.name}>\n      <SidebarFoodCard foodItemData={item} />\n    </List.Item>\n  );\n\n  return <List dataSource={foodItemDatas} renderItem={renderListItem} />;\n}\n\nexport default observer(SideBarFoodList);\n","import React, { useState } from \"react\";\nimport { useFoodItemDataStore } from \"../hooks/useStore\";\n\nimport { Select } from \"antd\";\n\nimport Axios from \"axios\";\nimport _ from \"lodash\";\n\nimport \"./Searchbar.scss\";\n\nconst { Option } = Select;\n\nfunction Searchbar({ placeholder = \"🔍 Find Another Food\" }) {\n  const [searchValue, setSearchValue] = useState();\n  const [foodItems, setFoodItems] = useState([]);\n  const foodItemDataStore = useFoodItemDataStore();\n\n  const searchFoodItems = _.debounce((foodSearchString) => {\n    setFoodItems([]);\n\n    if (_.isEmpty(foodSearchString)) {\n      setSearchValue(null);\n      return;\n    }\n\n    Axios.get(\n      `https://us-central1-fasttripfinder-199123.cloudfunctions.net/my-food-data-search-proxy/?query=autocomplete/${foodSearchString}`\n    ).then(({ data }) => {\n      const foodResponseItems = data.trim().split(\",\");\n\n      setSearchValue(foodSearchString);\n      setFoodItems(foodResponseItems.map(_.trim));\n    });\n  }, 300);\n\n  function updateSearchedValue(searchedFoodItem) {\n    console.log(\"selected: \", searchedFoodItem);\n\n    setSearchValue(null);\n\n    if (searchedFoodItem) {\n      foodItemDataStore.setFoodItemDataFromName(searchedFoodItem)\n    }\n  }\n\n  const renderHighlightedFoodItem = (foodItem) => {\n    return (\n      <Option key={foodItem}>\n        {foodItemWithHighlights(foodItem, searchValue)}\n      </Option>\n    );\n  };\n\n  return (\n    <Select\n      allowClear\n      showSearch\n      showArrow={false}\n      value={searchValue}\n      placeholder={placeholder}\n      notFoundContent={false}\n      filterOption={false}\n      onSearch={searchFoodItems}\n      onChange={updateSearchedValue}\n      className=\"searchbar\"\n    >\n      {foodItems.map(renderHighlightedFoodItem)}\n    </Select>\n  );\n}\n\nfunction foodItemWithHighlights(foodItem, substringToHighlight) {\n  const caseInsensitiveGlobalSearch = new RegExp(substringToHighlight, \"ig\");\n  const saltedFoodItem = _.replace(\n    foodItem,\n    caseInsensitiveGlobalSearch,\n    (text) => `<=>${text}<=>`\n  );\n\n  const splitText = saltedFoodItem.split(\"<=>\");\n\n  return splitText.map((substring, index) => {\n    const isHighlighting = index % 2 === 1;\n\n    if (isHighlighting) {\n      return (\n        <span key={index} className=\"highlighted\">\n          {substring}\n        </span>\n      );\n    }\n\n    return substring;\n  });\n}\n\nexport default Searchbar;\n","import React from \"react\";\n\nimport { Layout } from \"antd\";\n\nimport SidebarFoodList from \"./SidebarFoodList\";\nimport Searchbar from \"../Searchbar/Searchbar\";\n\nimport \"./Sidebar.scss\";\n\nfunction Sidebar({ className }) {\n  return (\n    <div className={className}>\n      <Layout className=\"sidebar\">\n        <div className=\"sidebar__container\">\n          <Searchbar />\n\n          <SidebarFoodList />\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { Row } from \"antd\";\n\nimport \"./NutritionFactsTable.scss\";\n\nfunction NutritionFactsTable({ foodItemData }) {\n  const foodItemDataNutritionFacts = foodItemData.nutritionFacts;\n\n  if (!foodItemDataNutritionFacts) return null;\n\n  const {\n    calories,\n    totalFat,\n    saturatedFat,\n    transFat,\n    cholesterol,\n    sodium,\n    totalCarbohydrates,\n    fiber,\n    sugar,\n    addedSugar,\n    protein,\n    vitaminC,\n    vitaminD,\n    iron,\n    calcium,\n    potassium,\n    phosphorus,\n    servingDescription,\n  } = foodItemDataNutritionFacts;\n\n  const AddedSugar = () => {\n    if (addedSugar.value === \"~\") {\n      return (\n        <Row className=\"no-sugar-added\">\n          <span>~ No added sugar data collected</span>\n          <b>~</b>\n        </Row>\n      );\n    }\n\n    return (\n      <Row className=\"no-sugar-added\">\n        <span>Includes {addedSugar.value}g Added Sugars</span>\n        <b>{addedSugar.percentage}</b>\n      </Row>\n    );\n  };\n\n  return (\n    <div className=\"nutrition-facts-table\">\n      <div className=\"facts-table-header\">\n        <b>Nutrition Facts</b>\n      </div>\n      <div className=\"facts-table-serving large-border-bottom\">\n        <div>\n          <b>Serving Size</b>\n        </div>\n        <div>{servingDescription}</div>\n      </div>\n\n      <Row justify=\"space-between\" className=\"calories medium-border-bottom\">\n        <span className=\"label\">Calories</span>\n        <span className=\"value\">{calories.value}</span>\n      </Row>\n\n      <Row justify=\"end\">\n        <b>% Daily Value *</b>\n      </Row>\n\n      <div className=\"chart\">\n        <Row>\n          <span>\n            <b>Total Fat</b> {totalFat.value}g\n          </span>\n          <b>{totalFat.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1\">\n          <span>Saturated Fat {saturatedFat.value}g</span>\n          <b>{saturatedFat.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1 thick-border-bottom\">\n          <span>\n            <em>Trans</em> Fat {transFat.value}g\n          </span>\n        </Row>\n\n        <Row className=\"thick-border-bottom\">\n          <span>\n            <b>Cholesterol</b> {cholesterol.value}mg\n          </span>\n          <b>{cholesterol.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>\n            <b>Sodium</b> {sodium.value}mg\n          </span>\n          <b>{sodium.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>\n            <b>Total Carbohydrate</b> {totalCarbohydrates.value}g\n          </span>\n          <b>{totalCarbohydrates.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1 thick-border-bottom\">\n          <span>Dietary Fiber {fiber.value}g</span>\n          <b>{fiber.percentage}%</b>\n        </Row>\n\n        <Row className=\"left-padding-1\">\n          <span>Total Sugars {sugar.value}g</span>\n          <b>{sugar.percentage}%</b>\n        </Row>\n\n        <AddedSugar />\n\n        <Row className=\"large-border-bottom\">\n          <span>\n            <b>Protein</b> {protein.value}g\n          </span>\n          <b>{protein.percentage}%</b>\n        </Row>\n\n        <Row>\n          <span>Vitamin C {vitaminC.value}mg</span>\n          {vitaminC.percentage}%\n        </Row>\n\n        <Row>\n          <span>Vitamin D {vitaminD.value}mcg</span>\n          {vitaminD.percentage}%\n        </Row>\n\n        <Row>\n          <span>Iron {iron.value}mg</span>\n          {iron.percentage}%\n        </Row>\n\n        <Row>\n          <span>Calcium {calcium.value}mg</span>\n          {calcium.percentage}%\n        </Row>\n\n        <Row>\n          <span>Potassium {potassium.value}mg</span>\n          {potassium.percentage}%\n        </Row>\n\n        <Row className=\"medium-border-bottom\">\n          <span>Phosphorus {phosphorus.value}mg</span>\n          {phosphorus.percentage}%\n        </Row>\n\n        <Row className=\"facts-table-footer\">\n          *The % Daily Value (DV) tells you how much a nutrient in a serving of\n          food contributes to a daily diet. 2,000 calories a day is used for\n          general nutrition advice.\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default observer(NutritionFactsTable);\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nimport _ from \"lodash\";\n\nimport \"./NutritionFactsHistogram.scss\";\n\nexport default function NutritionFactsHistogram({ foodItemData }) {\n  if (!foodItemData) return null;\n\n  const { WATER, FAT, CHOCDF, PROCNT, ALC } = foodItemData;\n\n  const informationPresent =\n    WATER !== \"~\" && FAT !== \"~\" && CHOCDF !== \"~\" && PROCNT !== \"~\";\n\n  const water = Number(WATER);\n  const fat = Number(FAT);\n  const carbs = Number(CHOCDF);\n  const protein = Number(PROCNT);\n  const alcohol = Number(ALC);\n\n  const containsAlcohol = alcohol > 0;\n\n  const componentTotal = water + fat + carbs + protein + alcohol;\n\n  const waterPercentage = _.toInteger((water / componentTotal) * 100);\n  const fatPercentage = _.toInteger((fat / componentTotal) * 100);\n  const carbsPercentage = _.toInteger((carbs / componentTotal) * 100);\n  const proteinPercentage = _.toInteger((protein / componentTotal) * 100);\n  const alcoholPercentage = _.toInteger((alcohol / componentTotal) * 100);\n\n  return (\n    informationPresent && (\n      <div className=\"histograms\">\n        <div className=\"data-title\">What is this food made of?</div>\n        <div className=\"data-tile\">\n          <Row className=\"square\" align=\"bottom\">\n            <Col className=\"water\" style={{ height: `${waterPercentage}%` }} />\n\n            <Col className=\"fat\" style={{ height: `${fatPercentage}%` }} />\n\n            <Col className=\"carbs\" style={{ height: `${carbsPercentage}%` }} />\n\n            <Col\n              className=\"protein\"\n              style={{ height: `${proteinPercentage}%` }}\n            />\n\n            {containsAlcohol && (\n              <Col\n                className=\"alcohol\"\n                style={{ height: `${alcoholPercentage}%` }}\n              />\n            )}\n          </Row>\n\n          <Row className=\"legend\">\n            <Col>\n              <div>{waterPercentage}%</div>\n              <div>Water</div>\n            </Col>\n\n            <Col>\n              <div>{fatPercentage}%</div>\n              <div>Fat</div>\n            </Col>\n\n            <Col>\n              <div>{carbsPercentage}%</div>\n              <div>Carbs</div>\n            </Col>\n\n            <Col>\n              <div>{proteinPercentage}%</div>\n              <div>Protein</div>\n            </Col>\n\n            {containsAlcohol && (\n              <Col>\n                <div>{alcoholPercentage}%</div>\n                <div>Alcohol</div>\n              </Col>\n            )}\n          </Row>\n        </div>\n      </div>\n    )\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nconst MOBILE_BREAKPOINT = 768;\n\nexport default function useIsMobile() {\n  const [isMobile, setIsMobile] = useState(\n    window.innerWidth < MOBILE_BREAKPOINT\n  );\n\n  // run on mount only\n  useEffect(() => {\n    function isMobileListener() {\n      const nextIsMobile = window.innerWidth < MOBILE_BREAKPOINT;\n\n      if (nextIsMobile !== isMobile) {\n        setIsMobile(nextIsMobile);\n      }\n    }\n\n    window.addEventListener(\"resize\", isMobileListener);\n\n    return () => window.removeEventListener(\"resize\", isMobileListener);\n  }, [isMobile, setIsMobile]);\n\n  return isMobile;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport NutritionFactsTable from \"./NutritionFactsTable\";\nimport { Row, Drawer, Button } from \"antd\";\nimport NutritionFactsHistogram from \"./NutritionFactsHistogram\";\n\nimport useIsMobile from \"../hooks/useIsMobile\";\n\nimport { useFoodItemDataStore } from \"../hooks/useStore\";\n\nimport \"./NutritionFactsPanel.scss\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport ServingSizeSelectionRow from \"../Sidebar/ServingSizeSelectionRow\";\n\nfunction NutritionFactsPanel({ className }) {\n  const {\n    params: { foodName, weight, quantity },\n  } = useRouteMatch();\n\n  const foodItemDataStore = useFoodItemDataStore();\n\n  const { foodItemData } = foodItemDataStore;\n\n  const [displayDrawer, setDisplayDrawer] = useState(false);\n  const isMobile = useIsMobile();\n\n  useEffect(() => {\n    foodItemDataStore.setFoodItemDataFromName(foodName, quantity, weight);\n\n    setDisplayDrawer(false);\n  }, [foodName]);\n\n  if (!foodItemData) return null;\n\n  const MobileHeader = () =>\n    isMobile && (\n      <>\n        <Button\n          className=\"facts-panel__button\"\n          size=\"large\"\n          onClick={() => setDisplayDrawer(true)}\n        >\n          🔍 Find Another Food\n        </Button>\n        <Drawer\n          title=\"Find Food!\"\n          placement=\"left\"\n          closable={true}\n          onClose={() => setDisplayDrawer(false)}\n          visible={displayDrawer}\n          style={{ width: \"100%\" }}\n        >\n          <Sidebar />\n        </Drawer>\n      </>\n    );\n\n  const MobileServingSizeSelector = () =>\n    isMobile && (\n      <div className=\"facts-panel-body\">\n        <Row\n          className=\"serving-selector\"\n          style={{ borderBottom: \"1px solid #ddd\" }}\n        >\n          Serving Size:\n        </Row>\n\n        <ServingSizeSelectionRow foodItemData={foodItemData} />\n      </div>\n    );\n\n  return (\n    <div className={`${className} facts-panel`}>\n      <MobileHeader />\n\n      <h1 className=\"facts-panel-header\">{foodItemData.name}</h1>\n      <div className=\"facts-panel-subheader\">\n        {foodItemData.food_description}\n      </div>\n\n      <div>\n        <strong>Database: </strong>\n        {foodItemData.data_db_name}\n      </div>\n\n      <div>\n        <MobileServingSizeSelector />\n        <Row align=\"middle\" className=\"facts-panel-body\">\n          <NutritionFactsTable foodItemData={foodItemData} />\n          <NutritionFactsHistogram foodItemData={foodItemData} />\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default observer(NutritionFactsPanel);\n","import React from \"react\";\n\nimport Searchbar from \"./Searchbar/Searchbar\";\n\nimport \"./HomePage.scss\";\n\nexport default function HomePage({ className }) {\n  return (\n    <div className={`${className} home-page`}>\n      <h1 className=\"home-header\">Nutrition Facts Search Tool</h1>\n      <div className=\"home-info-how-to-search-line\">\n        Use the search box to find a food and see the nutrient details.\n      </div>\n      <Searchbar placeholder=\"🔍 Search For A Food (Apples)\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport { Route, Switch } from \"react-router\";\n\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport NutritionFactsPanel from \"./NutritionFacts/NutritionFactsPanel\";\nimport HomePage from \"./HomePage\";\n\nimport useIsMobile from \"./hooks/useIsMobile\";\n\nimport logo from \"./assets/logo.svg\";\n\nimport \"./App.scss\";\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const isMobile = useIsMobile();\n  const displaySidebar = !isMobile;\n\n  const AppFooter = () => (\n    <>\n      <div className=\"app-footer-links\">\n        <a href=\"https://www.myfooddata.com/\">Home |</a>\n        <a href=\"https://www.myfooddata.com/contact.php\"> Contact |</a>\n        <a href=\"https://www.myfooddata.com/about.php\"> About |</a>\n        <a href=\"https://www.myfooddata.com/terms.php\"> Terms of Use |</a>\n        <a href=\"https://www.myfooddata.com/privacy.php\"> Privacy |</a>\n        <a href=\"https://www.myfooddata.com/faq.php\"> FAQ |</a>\n        <a href=\"https://www.myfooddata.com/sitemap.php\"> Sitemap</a>\n      </div>\n      <div className=\"app-footer-copyright\">© 2020 MyFoodData.com</div>\n    </>\n  );\n\n  return (\n    <Layout className={isMobile && \"mobile\"} style={{ minHeight: \"100vh\" }}>\n      <Header className=\"header\">\n        <a href=\"https://www.myfooddata.com\">\n          <img\n            className=\"header-logo\"\n            src={logo}\n            alt=\"my food data\"\n            height=\"100%\"\n          />\n        </a>\n      </Header>\n\n      <Content>\n        <Switch>\n          <Route path=\"/nutrition-facts/:foodName/:weight?/:quantity?\">\n            {displaySidebar && (\n              <Sidebar className=\"ant-layout-content__sidebar\" />\n            )}\n\n            <NutritionFactsPanel className=\"ant-layout-content__nutrition-facts-panel\" />\n          </Route>\n\n          {/* default route */}\n          <Route>\n            <HomePage className=\"ant-layout-content__home-page\" />\n          </Route>\n        </Switch>\n      </Content>\n\n      <Footer className=\"app-footer\">\n        <AppFooter />\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import _ from \"lodash\";\n\nconst MIN_QUANTITY = 1;\nconst MAX_QUANTITY = 10000;\n\nexport function calculateNutritionalFactTable(foodItemData) {\n  const nutritionFactsByKey = nutritionFactsFromFoodData(foodItemData);\n  const { servings, selectedWeight } = foodItemData;\n  const { description } = servings[selectedWeight];\n\n  return {\n    calories: nutritionFactsByKey(\"ENERC_KCAL\", 2000),\n    totalFat: nutritionFactsByKey(\"FAT\", 65),\n    saturatedFat: nutritionFactsByKey(\"FASAT\", 20),\n    transFat: nutritionFactsByKey(\"FATRN\"),\n    cholesterol: nutritionFactsByKey(\"CHOLE\", 300),\n    sodium: nutritionFactsByKey(\"NA\", 2400),\n    totalCarbohydrates: nutritionFactsByKey(\"CHOCDF\", 300),\n    fiber: nutritionFactsByKey(\"FIBTG\", 25),\n    sugar: nutritionFactsByKey(\"SUGAR\", 50),\n    addedSugar: nutritionFactsByKey(\"ADD_SG\", 50),\n    protein: nutritionFactsByKey(\"PROCNT\", 50),\n    vitaminC: nutritionFactsByKey(\"VITC\", 90),\n    vitaminD: nutritionFactsByKey(\"VITD\", 20),\n    iron: nutritionFactsByKey(\"FE\", 18),\n    calcium: nutritionFactsByKey(\"CA\", 1300),\n    potassium: nutritionFactsByKey(\"K\", 4700),\n    phosphorus: nutritionFactsByKey(\"P\", 1250),\n    servingDescription: description,\n  };\n}\n\nconst missingData = { value: \"~\", percentage: \"~\" };\n\nfunction nutritionFactsFromFoodData(foodItemData) {\n  const { selectedQuantity, selectedWeight } = foodItemData;\n  const ratio = _.toNumber(foodItemData.servings[selectedWeight].weight) / 100;\n\n  return (key, dailyValue = 1) => {\n    if (!foodItemData[key]) return missingData;\n\n    const base = _.toNumber(foodItemData[key]) * ratio * selectedQuantity;\n\n    return {\n      value: Math.round((base * 10) / 10),\n      percentage: Math.round((base / (1.0 * dailyValue)) * 100),\n    };\n  };\n}\n\nexport function validQuantity(quantity) {\n  if (quantity >= MIN_QUANTITY && quantity <= MAX_QUANTITY) {\n    return quantity;\n  }\n\n  return MIN_QUANTITY;\n}\n\nexport function validServingWeight(foodItemData, servingWeight) {\n  if (_.has(foodItemData.servings, servingWeight)) return servingWeight;\n\n  return _.first(_.keys(foodItemData.servings));\n}\n\nexport function validQuantityWeightFromQueryParams(\n  itemData,\n  servingWeight,\n  quantity\n) {\n  return {\n    selectedQuantity: validQuantity(quantity),\n    selectedWeight: validServingWeight(itemData, servingWeight),\n  };\n}\n","import { types, getRoot } from \"mobx-state-tree\";\nimport _ from \"lodash\";\n\nimport {\n  calculateNutritionalFactTable,\n  validServingWeight,\n  validQuantity,\n} from \"../util/format_food_item_data\";\n\nconst NumberOrNullType = types.maybeNull(types.number);\n\nexport const FoodItemDataModel = types\n  .model(\"FoodItemData\", {\n    NDB_No: types.identifier,\n    name3: types.string,\n    servingsizes: types.string,\n    food_description: types.maybeNull(types.string),\n    data_db_name: types.maybeNull(types.string),\n\n    WATER: NumberOrNullType,\n    ALC: NumberOrNullType,\n    ENERC_KCAL: NumberOrNullType,\n    FAT: NumberOrNullType,\n    FASAT: NumberOrNullType,\n    FATRN: NumberOrNullType,\n    CHOLE: NumberOrNullType,\n    NA: NumberOrNullType,\n    CHOCDF: NumberOrNullType,\n    FIBTG: NumberOrNullType,\n    SUGAR: NumberOrNullType,\n    ADD_SG: NumberOrNullType,\n    PROCNT: NumberOrNullType,\n    VITC: NumberOrNullType,\n    VITD: NumberOrNullType,\n    FE: NumberOrNullType,\n    CA: NumberOrNullType,\n    K: NumberOrNullType,\n    P: NumberOrNullType,\n\n    selectedQuantity: types.optional(types.number, 1),\n    _selectedWeight: types.optional(types.string, \"wt1\"),\n  })\n\n  .actions((self) => ({\n    setSelectedQuantity(selectedQuantity) {\n      self.selectedQuantity = validQuantity(Number(selectedQuantity));\n      self.updateStore();\n    },\n\n    setSelectedWeight(selectedWeight) {\n      self._selectedWeight = validServingWeight(self, selectedWeight);\n      self.updateStore();\n    },\n\n    updateStore() {\n      const { updatePathname } = getRoot(self);\n\n      if (updatePathname) {\n        updatePathname();\n      }\n    },\n  }))\n\n  .views((self) => ({\n    get nutritionFacts() {\n      return calculateNutritionalFactTable(self);\n    },\n\n    get servings() {\n      const servingSizes = JSON.parse(self.servingsizes);\n\n      return _.mapValues(servingSizes, ([weight, description]) => ({\n        weight,\n        description: `${description} (${weight}g)`,\n      }));\n    },\n\n    get name() {\n      return self.name3;\n    },\n\n    get id() {\n      return self.NDB_No;\n    },\n\n    get selectedWeight() {\n      return validServingWeight(self, self._selectedWeight);\n    },\n\n    get queryString() {\n      const { selectedQuantity, selectedWeight } = self;\n\n      let queryString = `/nutrition-facts/${self.name}`;\n\n      if (selectedQuantity && selectedWeight) {\n        queryString += `/${selectedWeight}/${selectedQuantity}`;\n      }\n\n      console.log(\"new query string: \", queryString);\n\n      return queryString;\n    },\n  }));\n","import Axios from \"axios\";\nimport { types, flow, getRoot } from \"mobx-state-tree\";\n\nimport { FoodItemDataModel } from \"./FoodItemDataModel\";\n\nexport const FoodItemDataStoreModel = types\n  .model(\"FoodItemDataStore\", {\n    foodItemDatas: types.array(FoodItemDataModel),\n    pathname: types.maybeNull(types.string),\n  })\n  .actions((self) => ({\n    fetchFoodItemData: flow(function* (name) {\n      console.log(\"searching name: \", name);\n\n      if (!name) {\n        return null;\n      }\n\n      const { data } = yield Axios.get(\n        `https://us-central1-fasttripfinder-199123.cloudfunctions.net/my-food-data-search-proxy/?query=food/${name}`\n      );\n\n      return FoodItemDataModel.create(data[0]);\n    }),\n\n    setFoodItemDataFromName: flow(function* (name, quantity, weight) {\n      const foodItemData = yield self.fetchFoodItemData(name);\n\n      if (!foodItemData) {\n        self.foodItemDatas = [];\n        return;\n      }\n\n      if (self.foodItemDatas.length === 0) {\n        foodItemData.setSelectedQuantity(quantity);\n        foodItemData.setSelectedWeight(weight);\n      }\n\n      self.pathname = foodItemData.queryString;\n\n      self.foodItemDatas = [foodItemData];\n\n      console.log(\"about to update root path after setFoodFromName\")\n      getRoot(self).updatePathname();\n    }),\n\n    removeFoodItemData(item) {\n      self.foodItemDatas.remove(item);\n\n      getRoot(self).updatePathname();\n    },\n  }))\n  .views((self) => ({\n    get foodItemData() {\n      if (self.foodItemDatas.length > 0) {\n        return self.foodItemDatas[0];\n      }\n\n      return null;\n    },\n\n    get queryString() {\n      if (self.foodItemData) {\n        return self.foodItemData.queryString;\n      }\n\n      return null;\n    },\n  }));\n","import React, { useEffect, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter, useHistory } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { Provider } from \"mobx-react\";\nimport { RootStoreModel } from \"./models/RootStoreModel\";\n\nconst rootStore = RootStoreModel.create({});\n\nconst AppWithRootStore = () => {\n  const rootStoreState = useMemo(() => rootStore, []);\n  const history = useHistory();\n\n  // hacky work around because mobx-react-router does not work well with mobx-state-tree\n  useEffect(() => {\n    rootStoreState.setRouter(history);\n  }, [history]);\n\n  return (\n    <Provider store={rootStoreState}>\n      <App />\n    </Provider>\n  );\n};\n\nReactDOM.render(\n  <BrowserRouter basename=\"myFoodDataClone\">\n    <RecoilRoot>\n      <AppWithRootStore />\n    </RecoilRoot>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { types } from \"mobx-state-tree\";\nimport _ from \"lodash\";\n\nimport { FoodItemDataStoreModel } from \"./FoodItemDataStoreModel\";\n\nconst basename = \"/myFoodDataClone/\";\n\nexport const RootStoreModel = types\n  .model(\"RootStore\", {\n    foodItemDataStore: types.optional(FoodItemDataStoreModel, {}),\n    pathname: types.maybeNull(types.string),\n  })\n  .volatile((_self) => ({\n    router: null,\n  }))\n  .actions((self) => ({\n    setRouter(router) {\n      self.router = router;\n    },\n\n    updatePathname() {\n      const oldPathname = self.pathname;\n      let newPathname = self.foodItemDataStore.queryString;\n\n      newPathname = newPathname || \"/\";\n\n      if (oldPathname === \"/\" || newPathname === \"/\") {\n        self.router.push({ pathname: newPathname });\n      } else {\n        self.router.replace({ pathname: newPathname });\n      }\n\n      self.pathname = newPathname;\n    },\n  }));\n"],"sourceRoot":""}